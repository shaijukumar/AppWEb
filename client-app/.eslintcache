[{"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\index.tsx":"1","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\reportWebVitals.ts":"2","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\app\\layout\\ScrollToTop.tsx":"3","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\app\\layout\\App.tsx":"4","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\user\\UserStore.ts":"5","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageTag\\PageTagStore.ts":"6","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageTag\\PageTagList.tsx":"7","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\user\\Login.tsx":"8","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageTag\\PageTagEdit.tsx":"9","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\nav\\NavBar.tsx":"10","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\home\\HomePage.tsx":"11","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\ToDo\\ToDoEdit.tsx":"12","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\ToDo\\ToDoList.tsx":"13","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\SitePage\\SitePageEdit.tsx":"14","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\SitePage\\SitePageList.tsx":"15","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageCategory\\PageCategoryEdit.tsx":"16","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageCategory\\PageCategoryList.tsx":"17","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\user\\User.ts":"18","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageTag\\PageTag.ts":"19","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\app\\api\\agent.ts":"20","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\ToDo\\ToDo.ts":"21","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\ToDo\\ToDoStore.ts":"22","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\SitePage\\SitePageStore.ts":"23","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\SitePage\\SitePage.ts":"24","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageCategory\\PageCategoryStore.ts":"25","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageCategory\\PageCategory.ts":"26","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\user\\CurrentUserNav.tsx":"27","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageTag\\TagChip.tsx":"28","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\app\\common\\form\\TestABCD.tsx":"29","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\app\\common\\form\\PageCategorySelect.tsx":"30","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\app\\common\\form\\MyCustomTxt.tsx":"31","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\app\\common\\common\\PageCategoryItem.tsx":"32","C:\\Shaiju\\wayooz\\client-app\\src\\index.tsx":"33","C:\\Shaiju\\wayooz\\client-app\\src\\reportWebVitals.ts":"34","C:\\Shaiju\\wayooz\\client-app\\src\\app\\layout\\App.tsx":"35","C:\\Shaiju\\wayooz\\client-app\\src\\app\\layout\\ScrollToTop.tsx":"36","C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\UserStore.ts":"37","C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\Login.tsx":"38","C:\\Shaiju\\wayooz\\client-app\\src\\features\\home\\HomePage.tsx":"39","C:\\Shaiju\\wayooz\\client-app\\src\\features\\nav\\NavBar.tsx":"40","C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\User.ts":"41","C:\\Shaiju\\wayooz\\client-app\\src\\app\\api\\agent.ts":"42","C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\CurrentUserNav.tsx":"43","C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\form\\MyCustomTxt.tsx":"44","C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\UserList.tsx":"45","C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\UserManagerStore.ts":"46","C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\UserManager.ts":"47","C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\UserEdit.tsx":"48","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRole\\AppUserRoleList.tsx":"49","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRole\\AppUserRoleEdit.tsx":"50","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRole\\AppUserRoleStore.ts":"51","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRole\\AppUserRole.ts":"52","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\AppTableMasterList.tsx":"53","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\AppTableMasterEdit.tsx":"54","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\AppTableMasterStore.ts":"55","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\AppTableMaster.ts":"56","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppColumnMaster\\AppColumnMasterList.tsx":"57","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppColumnMaster\\AppColumnMasterEdit.tsx":"58","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppColumnMaster\\AppColumnMasterStore.ts":"59","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppColumnMaster\\AppColumnMaster.ts":"60","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRoleMaster\\AppUserRoleMasterList.tsx":"61","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRoleMaster\\AppUserRoleMasterEdit.tsx":"62","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRoleMaster\\AppUserRoleMasterStore.ts":"63","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRoleMaster\\AppUserRoleMaster.ts":"64","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserAccess\\AppUserAccessList.tsx":"65","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserAccess\\AppUserAccessEdit.tsx":"66","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserAccess\\AppUserAccessStore.ts":"67","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserAccess\\AppUserAccess.ts":"68","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppColumnMaster\\AppColumn.tsx":"69","C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\SystemConstants.ts":"70","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppData\\AppDataEdit.tsx":"71","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppData\\AppDataList.tsx":"72","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppData\\AppData.ts":"73","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppData\\AppDataStore.ts":"74","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppStatusList\\AppStatusListList.tsx":"75","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppStatusList\\AppStatusListEdit.tsx":"76","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppStatusList\\AppStatusList.ts":"77","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppStatusList\\AppStatusListStore.ts":"78","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppHistory\\AppHistoryList.tsx":"79","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppHistory\\AppHistoryEdit.tsx":"80","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppHistory\\AppHistoryStore.ts":"81","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppHistory\\AppHistory.ts":"82","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfigType\\AppConfigTypeList.tsx":"83","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfigType\\AppConfigTypeEdit.tsx":"84","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfigType\\AppConfigTypeStore.ts":"85","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfigType\\AppConfigType.ts":"86","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfig\\AppConfigList.tsx":"87","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfig\\AppConfigStore.ts":"88","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfig\\AppConfig.ts":"89","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfig\\AppConfigEdit.tsx":"90","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAction\\AppActionEdit.tsx":"91","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAction\\AppActionList.tsx":"92","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAction\\AppAction.ts":"93","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAction\\AppActionStore.ts":"94","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppFlow\\AppFlowEdit.tsx":"95","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppFlow\\AppFlowList.tsx":"96","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppFlow\\AppFlowStore.ts":"97","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppFlow\\AppFlow.ts":"98","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppApi\\AppApiList.tsx":"99","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppApi\\AppApiEdit.tsx":"100","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppApi\\AppApi.ts":"101","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppApi\\AppApiStore.ts":"102","C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\form\\MyDropDown.tsx":"103","C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\form\\MyCheckBox.tsx":"104","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAttachment\\AppAttachmentList.tsx":"105","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAttachment\\AppAttachmentEdit.tsx":"106","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAttachment\\AppAttachmentStore.ts":"107","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAttachment\\AppAttachment.ts":"108","C:\\Shaiju\\wayooz\\client-app\\src\\features\\nav\\listItems.tsx":"109","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNavigation\\AppNavigationList.tsx":"110","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNavigation\\AppNavigationEdit.tsx":"111","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNavigation\\AppNavigationStore.ts":"112","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNavigation\\AppNavigation.ts":"113","C:\\Shaiju\\wayooz\\client-app\\src\\features\\nav\\AppLeftNavBar.tsx":"114","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotificationsMaster\\AppNotificationsMasterEdit.tsx":"115","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotificationsMaster\\AppNotificationsMasterList.tsx":"116","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotificationsMaster\\AppNotificationsMaster.ts":"117","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotificationsMaster\\AppNotificationsMasterStore.ts":"118","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNitificationTemplate\\AppNitificationTemplateList.tsx":"119","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNitificationTemplate\\AppNitificationTemplateEdit.tsx":"120","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNitificationTemplate\\AppNitificationTemplateStore.ts":"121","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNitificationTemplate\\AppNitificationTemplate.ts":"122","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AdminPage\\AdminPage.tsx":"123","C:\\Shaiju\\wayooz\\client-app\\src\\features\\nav\\Notifications.tsx":"124","C:\\Shaiju\\wayooz\\client-app\\src\\features\\nav\\CurrentUser.tsx":"125","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotifications\\AppNotificationsList.tsx":"126","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotifications\\AppNotificationsStore.ts":"127","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotifications\\AppNotifications.ts":"128","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotifications\\AppNotificationsEdit.tsx":"129","C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\UserProfile.tsx":"130","C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\common\\ErrorPage.tsx":"131","C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\Theme.ts":"132","C:\\Shaiju\\wayooz\\client-app\\src\\features\\Employee\\EmployeeList.tsx":"133","C:\\Shaiju\\wayooz\\client-app\\src\\features\\Employee\\EmployeeEdit.tsx":"134","C:\\Shaiju\\wayooz\\client-app\\src\\features\\Employee\\Employee.ts":"135","C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\form\\TableButton.tsx":"136","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\TableDetails.tsx":"137","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\TableColumns.tsx":"138","C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\common\\MessageDialog.tsx":"139","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\TableStatusList.tsx":"140","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\TableFlowList.tsx":"141","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\TableActions.tsx":"142","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\TableActionItemEdit.tsx":"143","C:\\Shaiju\\wayooz\\client-app\\src\\Portal\\Navigation\\NavigationEdit.tsx":"144","C:\\Shaiju\\wayooz\\client-app\\src\\Portal\\Navigation\\Navigation.ts":"145","C:\\Shaiju\\wayooz\\client-app\\src\\Portal\\Api\\Api.ts":"146","C:\\Shaiju\\wayooz\\client-app\\src\\Portal\\Navigation\\NavigationList.tsx":"147"},{"size":766,"mtime":1613232574000,"results":"148","hashOfConfig":"149"},{"size":425,"mtime":499202100000,"results":"150","hashOfConfig":"149"},{"size":311,"mtime":1612453058000,"results":"151","hashOfConfig":"149"},{"size":2565,"mtime":1617510382000,"results":"152","hashOfConfig":"149"},{"size":1858,"mtime":1613238916000,"results":"153","hashOfConfig":"149"},{"size":2695,"mtime":1614453736000,"results":"154","hashOfConfig":"149"},{"size":2759,"mtime":1613690668000,"results":"155","hashOfConfig":"149"},{"size":3164,"mtime":1613232614000,"results":"156","hashOfConfig":"149"},{"size":3245,"mtime":1614208660000,"results":"157","hashOfConfig":"149"},{"size":2626,"mtime":1617564034000,"results":"158","hashOfConfig":"149"},{"size":1119,"mtime":1614644996000,"results":"159","hashOfConfig":"149"},{"size":3210,"mtime":1613233048000,"results":"160","hashOfConfig":"149"},{"size":2460,"mtime":1614639548000,"results":"161","hashOfConfig":"149"},{"size":7790,"mtime":1620315798000,"results":"162","hashOfConfig":"149"},{"size":2713,"mtime":1614562032000,"results":"163","hashOfConfig":"149"},{"size":5262,"mtime":1617579894000,"results":"164","hashOfConfig":"149"},{"size":2717,"mtime":1617560276000,"results":"165","hashOfConfig":"149"},{"size":493,"mtime":1612942978000,"results":"166","hashOfConfig":"149"},{"size":251,"mtime":1613690534000,"results":"167","hashOfConfig":"149"},{"size":1501,"mtime":1613238564000,"results":"168","hashOfConfig":"149"},{"size":225,"mtime":1613066634000,"results":"169","hashOfConfig":"149"},{"size":2959,"mtime":1613240398000,"results":"170","hashOfConfig":"149"},{"size":2539,"mtime":1613245984000,"results":"171","hashOfConfig":"149"},{"size":530,"mtime":1617565020000,"results":"172","hashOfConfig":"149"},{"size":2635,"mtime":1617510488000,"results":"173","hashOfConfig":"149"},{"size":411,"mtime":1617483040000,"results":"174","hashOfConfig":"149"},{"size":821,"mtime":1613232684000,"results":"175","hashOfConfig":"149"},{"size":635,"mtime":1614455866000,"results":"176","hashOfConfig":"149"},{"size":483,"mtime":1614648878000,"results":"177","hashOfConfig":"149"},{"size":1481,"mtime":1617566328000,"results":"178","hashOfConfig":"149"},{"size":1034,"mtime":1617588490000,"results":"179","hashOfConfig":"149"},{"size":947,"mtime":1617561322000,"results":"180","hashOfConfig":"149"},{"size":765,"mtime":1625059577496,"results":"181","hashOfConfig":"182"},{"size":425,"mtime":499202100000,"results":"183","hashOfConfig":"182"},{"size":13780,"mtime":1626594323360,"results":"184","hashOfConfig":"182"},{"size":347,"mtime":1625091577698,"results":"185","hashOfConfig":"182"},{"size":2201,"mtime":1620740255212,"results":"186","hashOfConfig":"182"},{"size":3163,"mtime":1622621679202,"results":"187","hashOfConfig":"182"},{"size":569,"mtime":1625654139303,"results":"188","hashOfConfig":"182"},{"size":4782,"mtime":1625059484734,"results":"189","hashOfConfig":"182"},{"size":727,"mtime":1620915237107,"results":"190","hashOfConfig":"182"},{"size":2452,"mtime":1625648340615,"results":"191","hashOfConfig":"182"},{"size":821,"mtime":1613232684000,"results":"192","hashOfConfig":"182"},{"size":1298,"mtime":1626465395724,"results":"193","hashOfConfig":"182"},{"size":5386,"mtime":1625897827677,"results":"194","hashOfConfig":"182"},{"size":2868,"mtime":1626357860482,"results":"195","hashOfConfig":"182"},{"size":452,"mtime":1625893510835,"results":"196","hashOfConfig":"182"},{"size":5390,"mtime":1626357868575,"results":"197","hashOfConfig":"182"},{"size":3024,"mtime":1626002572164,"results":"198","hashOfConfig":"182"},{"size":5611,"mtime":1626622772394,"results":"199","hashOfConfig":"182"},{"size":3254,"mtime":1626003963699,"results":"200","hashOfConfig":"182"},{"size":294,"mtime":1622617795721,"results":"201","hashOfConfig":"182"},{"size":5437,"mtime":1626344053557,"results":"202","hashOfConfig":"182"},{"size":8323,"mtime":1625654306510,"results":"203","hashOfConfig":"182"},{"size":2744,"mtime":1626193013598,"results":"204","hashOfConfig":"182"},{"size":290,"mtime":1622953435901,"results":"205","hashOfConfig":"182"},{"size":2648,"mtime":1621340044682,"results":"206","hashOfConfig":"182"},{"size":4736,"mtime":1626536936738,"results":"207","hashOfConfig":"182"},{"size":3399,"mtime":1626157447035,"results":"208","hashOfConfig":"182"},{"size":547,"mtime":1626536860599,"results":"209","hashOfConfig":"182"},{"size":2617,"mtime":1626358196857,"results":"210","hashOfConfig":"182"},{"size":8653,"mtime":1626465897435,"results":"211","hashOfConfig":"182"},{"size":4239,"mtime":1626409568623,"results":"212","hashOfConfig":"182"},{"size":670,"mtime":1626361635342,"results":"213","hashOfConfig":"182"},{"size":2715,"mtime":1621339043459,"results":"214","hashOfConfig":"182"},{"size":4314,"mtime":1622617658872,"results":"215","hashOfConfig":"182"},{"size":2643,"mtime":1622617663487,"results":"216","hashOfConfig":"182"},{"size":335,"mtime":1622617616547,"results":"217","hashOfConfig":"182"},{"size":7120,"mtime":1626536971013,"results":"218","hashOfConfig":"182"},{"size":1084,"mtime":1626666899553,"results":"219","hashOfConfig":"182"},{"size":3230,"mtime":1622034130541,"results":"220","hashOfConfig":"182"},{"size":2441,"mtime":1622034130558,"results":"221","hashOfConfig":"182"},{"size":251,"mtime":1622034130496,"results":"222","hashOfConfig":"182"},{"size":2518,"mtime":1622034130520,"results":"223","hashOfConfig":"182"},{"size":3219,"mtime":1625654407471,"results":"224","hashOfConfig":"182"},{"size":4659,"mtime":1625654422736,"results":"225","hashOfConfig":"182"},{"size":311,"mtime":1622609157708,"results":"226","hashOfConfig":"182"},{"size":3285,"mtime":1626174047515,"results":"227","hashOfConfig":"182"},{"size":2520,"mtime":1625654483311,"results":"228","hashOfConfig":"182"},{"size":3309,"mtime":1622617576839,"results":"229","hashOfConfig":"182"},{"size":2580,"mtime":1622617583934,"results":"230","hashOfConfig":"182"},{"size":648,"mtime":1624807837013,"results":"231","hashOfConfig":"182"},{"size":2554,"mtime":1622542870642,"results":"232","hashOfConfig":"182"},{"size":6415,"mtime":1626033937147,"results":"233","hashOfConfig":"182"},{"size":2671,"mtime":1625387314197,"results":"234","hashOfConfig":"182"},{"size":286,"mtime":1622542508776,"results":"235","hashOfConfig":"182"},{"size":3248,"mtime":1626033480942,"results":"236","hashOfConfig":"182"},{"size":3178,"mtime":1622607148410,"results":"237","hashOfConfig":"182"},{"size":569,"mtime":1625390657128,"results":"238","hashOfConfig":"182"},{"size":6436,"mtime":1626068590908,"results":"239","hashOfConfig":"182"},{"size":6711,"mtime":1626336130866,"results":"240","hashOfConfig":"182"},{"size":4807,"mtime":1625650899870,"results":"241","hashOfConfig":"182"},{"size":704,"mtime":1626339870114,"results":"242","hashOfConfig":"182"},{"size":3150,"mtime":1626347554539,"results":"243","hashOfConfig":"182"},{"size":3253,"mtime":1622720677097,"results":"244","hashOfConfig":"182"},{"size":2459,"mtime":1622723466422,"results":"245","hashOfConfig":"182"},{"size":3012,"mtime":1626332383776,"results":"246","hashOfConfig":"182"},{"size":251,"mtime":1626182901618,"results":"247","hashOfConfig":"182"},{"size":4597,"mtime":1626600228782,"results":"248","hashOfConfig":"182"},{"size":13766,"mtime":1626251738344,"results":"249","hashOfConfig":"182"},{"size":3885,"mtime":1626600228782,"results":"250","hashOfConfig":"182"},{"size":6779,"mtime":1625949180234,"results":"251","hashOfConfig":"182"},{"size":2040,"mtime":1626337090449,"results":"252","hashOfConfig":"182"},{"size":2116,"mtime":1623833254241,"results":"253","hashOfConfig":"182"},{"size":2772,"mtime":1626251800641,"results":"254","hashOfConfig":"182"},{"size":4382,"mtime":1625654848591,"results":"255","hashOfConfig":"182"},{"size":3691,"mtime":1625654775099,"results":"256","hashOfConfig":"182"},{"size":945,"mtime":1624011160447,"results":"257","hashOfConfig":"182"},{"size":2388,"mtime":1625067792138,"results":"258","hashOfConfig":"182"},{"size":3105,"mtime":1626515621641,"results":"259","hashOfConfig":"182"},{"size":5286,"mtime":1626516887653,"results":"260","hashOfConfig":"182"},{"size":2904,"mtime":1625654461944,"results":"261","hashOfConfig":"182"},{"size":544,"mtime":1626514338516,"results":"262","hashOfConfig":"182"},{"size":1654,"mtime":1626469749837,"results":"263","hashOfConfig":"182"},{"size":3553,"mtime":1625141691855,"results":"264","hashOfConfig":"182"},{"size":2682,"mtime":1625142217348,"results":"265","hashOfConfig":"182"},{"size":742,"mtime":1625564593918,"results":"266","hashOfConfig":"182"},{"size":2832,"mtime":1625141604105,"results":"267","hashOfConfig":"182"},{"size":2527,"mtime":1625648755310,"results":"268","hashOfConfig":"182"},{"size":5063,"mtime":1625490438421,"results":"269","hashOfConfig":"182"},{"size":2854,"mtime":1625370706343,"results":"270","hashOfConfig":"182"},{"size":367,"mtime":1625370688553,"results":"271","hashOfConfig":"182"},{"size":1998,"mtime":1625649413109,"results":"272","hashOfConfig":"182"},{"size":4755,"mtime":1625654109322,"results":"273","hashOfConfig":"182"},{"size":1599,"mtime":1625649044832,"results":"274","hashOfConfig":"182"},{"size":2740,"mtime":1625552573890,"results":"275","hashOfConfig":"182"},{"size":3379,"mtime":1625553689239,"results":"276","hashOfConfig":"182"},{"size":724,"mtime":1625648686876,"results":"277","hashOfConfig":"182"},{"size":3783,"mtime":1625496119335,"results":"278","hashOfConfig":"182"},{"size":545,"mtime":1625653998234,"results":"279","hashOfConfig":"182"},{"size":541,"mtime":1625857314877,"results":"280","hashOfConfig":"182"},{"size":258,"mtime":1626175876293,"results":"281","hashOfConfig":"182"},{"size":3679,"mtime":1625891861073,"results":"282","hashOfConfig":"182"},{"size":5296,"mtime":1625758555166,"results":"283","hashOfConfig":"182"},{"size":633,"mtime":1625729219743,"results":"284","hashOfConfig":"182"},{"size":1262,"mtime":1626251624541,"results":"285","hashOfConfig":"182"},{"size":3332,"mtime":1626587470876,"results":"286","hashOfConfig":"182"},{"size":6263,"mtime":1626537366073,"results":"287","hashOfConfig":"182"},{"size":1294,"mtime":1626251586130,"results":"288","hashOfConfig":"182"},{"size":6167,"mtime":1626599581163,"results":"289","hashOfConfig":"182"},{"size":5555,"mtime":1626588341411,"results":"290","hashOfConfig":"182"},{"size":8776,"mtime":1626593838113,"results":"291","hashOfConfig":"182"},{"size":7828,"mtime":1626587876787,"results":"292","hashOfConfig":"182"},{"size":7405,"mtime":1626758806077,"results":"293","hashOfConfig":"182"},{"size":548,"mtime":1626664936100,"results":"294","hashOfConfig":"182"},{"size":5765,"mtime":1626705396564,"results":"295","hashOfConfig":"182"},{"size":3572,"mtime":1626759109148,"results":"296","hashOfConfig":"182"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d76hw6",{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},"11y7zz1",{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"379"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"379"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"364"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"364"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"364"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"364"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"364"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"364"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"364"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"515","messages":"516","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"364"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"526","messages":"527","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"364"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"364"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"364"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"585","messages":"586","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"591","messages":"592","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"593","messages":"594","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"595","messages":"596","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"597","messages":"598","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"601","messages":"602","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"364"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\index.tsx",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\reportWebVitals.ts",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\app\\layout\\ScrollToTop.tsx",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\app\\layout\\App.tsx",["606"],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\user\\UserStore.ts",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageTag\\PageTagStore.ts",["607"],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageTag\\PageTagList.tsx",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\user\\Login.tsx",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageTag\\PageTagEdit.tsx",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\nav\\NavBar.tsx",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\home\\HomePage.tsx",["608"],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\ToDo\\ToDoEdit.tsx",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\ToDo\\ToDoList.tsx",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\SitePage\\SitePageEdit.tsx",["609"],"import { Button, ButtonGroup, Chip, Container, LinearProgress, TextField } from '@material-ui/core';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport MyCustomTxt from '../../app/common/form/MyCustomTxt';\nimport { SitePage } from './SitePage';\nimport { SitePageContext } from './SitePageStore';\nimport { observer } from 'mobx-react-lite';\nimport { Tag, TagGroup } from 'rsuite';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport MyTag from '../../app/common/form/MyTag';\nimport { PageTagContext } from '../PageTag/PageTagStore';\nimport { IPageTag, PageTag } from '../PageTag/PageTag';\nimport { Autocomplete } from '@material-ui/lab';\nimport ContentEditable from \"react-contenteditable\";\n\nimport PageCategorySelect from '../../app/common/form/PageCategorySelect';\nimport { PageCategoryContext } from '../PageCategory/PageCategoryStore';\nimport ContentEdit from './ContentEdit';\n\n\ninterface DetailParms {\n  id: string;\n}\nconst SitePageEdit: React.FC = () => {\n\n  \n\n  const { id } = useParams<DetailParms>();\n  let history = useHistory();\n\n  const SitePageStore = useContext(SitePageContext);\n  const PageTagStore = useContext(PageTagContext);\n  const PageCategoryStore = useContext(PageCategoryContext);\n \n  \n  const [item, setItem] = useState(new SitePage());\n  const [loading, setLoading] = useState(true);  \n  const [tagList, setTagList] = useState<PageTag[]>();\n  \n  const sanitize = () => {\n    //item.PageHtml = d.target.value ;\n    //this.setState({ html: sanitizeHtml(this.state.html, this.sanitizeConf) });\n  };\n\n  useEffect(() => {\n    \n    PageCategoryStore.getList();\n    SitePageStore.loadItem(id);\n    let tgLst: IPageTag[] = [];\n    if (id) {\n      SitePageStore.loadItem(id).then((val) => {\n                 \n        if(val){         \n          if(val?.Tags){\n            val?.Tags.split(' ').map( t => {                  \n                let tg = new PageTag();    \n                tg.Id = t;\n                tg.value = t;\n                tg.label = PageTagStore.getTag(t);\n                tg.value && tgLst.push(tg);          \n            });               \n          }\n        }       \n        setTagList(tgLst);              \n        setItem(val as any);  \n        setLoading(false);   \n      });\n    } else {\n      setItem(new SitePage()); \n      setTagList(tgLst);\n      setLoading(false);     \n    }\n    \n  }, [id, SitePageStore, SitePageStore.loadItem, setTagList]);\n\n  const onItemSubmit = (values: any) => {    \n    //debugger;   \n    setLoading(true);\n    values.Tags = \"\";\n    tagList?.map( t => {\n      values.Tags += t.Id + \" \";\n    });\n    \n    SitePageStore.editItem(values).then((val) => {      \n      setItem(new SitePage(val));\n      setLoading(false);\n    });\n\n  };\n\n  if(loading){\n    return <LinearProgress color=\"secondary\"  className=\"loaderStyle\" /> \n  }\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">  \n      \n      <Formik\n          initialValues={item}\n          //dirty={}\n          validationSchema={Yup.object({\n            Title: Yup.string().required('Title required'),   \n            URLTitle: Yup.string().required('URL Title required'), \n            CatId: Yup.string().required('Category required'),  \n            PageHtml: Yup.string().required('PageHtml required'),                 \n          })}\n          onSubmit={onItemSubmit}          \n        >\n      \n{({ handleChange, handleBlur, handleSubmit, values, isValid, dirty, setFieldValue, setFieldTouched, validateForm }) => (\n          <Form >             \n            \n          <MyCustomTxt   \n              name=\"Title\"                         \n              type=\"text\"                \n              autoFocus={true}\n              required={true}                                \n              label=\"Title\"                                                                     \n            />\n                type=\"text\"                                \n                required={true}                                \n                label=\"URL Title\"                                                                     \n             />\n\n            <PageCategorySelect\n                name=\"CatId\"                                                                         \n                required={false}                                \n                label=\"Category\" \n                list={PageCategoryStore.itemList}\n                parent= {false}\n             />\n                                          \n              <Autocomplete     \n                  className=\"customFieldMargin\"                              \n                  value={tagList}\n                  multiple\n                  id=\"TagList\"          \n                  options={PageTagStore.itemList as any[]}\n                  //classes={classes}\n                  getOptionLabel={(option:any) => option.label}                  \n                  freeSolo\n                  renderTags={(value, getTagProps) =>\n                    value.map((option:any, index) => (\n                      tagList  && <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} /> \n                    ))\n                  }\n                  renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" label=\"Tags\" placeholder=\"Tags\" fullWidth />\n                  )}\n                  \n                  onChange={(event:any, newValue:any) => {\n                    debugger;\n                    setTagList(newValue);                           \n                  }}\n              />\n            \n            <ContentEditable\n              id=\"PageHtml\"              \n              className=\"editable\"\n              tagName=\"pre\"\n              html={item.PageHtml} // innerHTML of the editable div\n              //disabled={!this.state.editable} // use true to disable edition\n              onChange={(d:any) => { \n                debugger;                                 \n                item.PageHtml = d.target.value ; \n                setFieldValue('PageHtml', d.target.value);\n                setFieldTouched(\"PageHtml\", true);\n                \n              }} // handle innerHTML change\n              onBlur={sanitize}\n            />            \n\n            {/* <textarea\n              className=\"editable\"\n              value={item.PageHtml}\n              onChange={ (d:any) => {setFieldValue('PageHtml', d.target.value);} }\n              //onBlur={this.sanitize}\n            /> */}\n                         \n              <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n                <Button\n                  disabled={!isValid}\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"                  \n                >\n                  Save\n                </Button> \n                { item.Id && \n                  <Button\n                     \n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"                    \n                    onClick={ () => {\n                      SitePageStore.deleteItem(item.Id).then( () => {\n                        history.push('/SitePagelist');\n                      })\n                    }}\n                  >\n                    Delete\n                  </Button>\n                }\n                <Button onClick={ () => { history.push('/SitePagelist');  }}>Back</Button>          \n              </ButtonGroup>\n\n          </Form>\n           )}        \n        </Formik>      \n    </Container>\n  );\n};\n\nexport default observer(SitePageEdit);\n\n","C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\SitePage\\SitePageList.tsx",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageCategory\\PageCategoryEdit.tsx",["610","611","612","613","614"],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageCategory\\PageCategoryList.tsx",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\user\\User.ts",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageTag\\PageTag.ts",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\app\\api\\agent.ts",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\ToDo\\ToDo.ts",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\ToDo\\ToDoStore.ts",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\SitePage\\SitePageStore.ts",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\SitePage\\SitePage.ts",["615"],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageCategory\\PageCategoryStore.ts",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageCategory\\PageCategory.ts",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\user\\CurrentUserNav.tsx",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\features\\PageTag\\TagChip.tsx",["616"],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\app\\common\\form\\TestABCD.tsx",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\app\\common\\form\\PageCategorySelect.tsx",["617","618"],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\app\\common\\form\\MyCustomTxt.tsx",[],"C:\\Shaiju\\GitGub\\wayooz\\client-app\\src\\app\\common\\common\\PageCategoryItem.tsx",["619","620","621"],"C:\\Shaiju\\wayooz\\client-app\\src\\index.tsx",[],["622","623"],"C:\\Shaiju\\wayooz\\client-app\\src\\reportWebVitals.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\app\\layout\\ScrollToTop.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\UserStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\Login.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\nav\\NavBar.tsx",[],["624","625"],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\User.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\app\\api\\agent.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\CurrentUserNav.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\form\\MyCustomTxt.tsx",["626"],"import React from \"react\";\r\nimport {  \r\n  useField,\r\n  FieldAttributes,  \r\n} from \"formik\";\r\n\r\nimport {        \r\n    TextField,    \r\n  } from \"@material-ui/core\";\r\n\r\n\r\ntype CustomTxtProps = { label: string, multiline?: boolean, width?: string  } & FieldAttributes<{}>;\r\n\r\nconst MyCustomTxt: React.FC<CustomTxtProps> = ({ label, placeholder, type,required,autoComplete, autoFocus,multiline, width, ...props }) => {\r\n\r\n    //const [field] = useField<{}>(props);\r\n\r\n    const [field, meta] = useField<{}>(props);\r\n    const [txtMargin] = useField('normal');\r\n    const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n  //var multiline = true;\r\n    return (      \r\n        <TextField\r\n            placeholder={placeholder}\r\n            {...field}\r\n            type={type}          \r\n            error={!!errorText}\r\n            variant=\"outlined\"\r\n            margin='normal'\r\n            required={required}\r\n           //autoComplete={autoComplete}\r\n            autoFocus={autoFocus}\r\n            fullWidth   \r\n            label={label}\r\n            multiline={multiline}  \r\n            style={{width: width, display: 'block'}}    \r\n            size='small'              \r\n                                      \r\n      />           \r\n    );        \r\n  };\r\n\r\nexport default MyCustomTxt;\r\n\r\n","C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\UserList.tsx",["627","628","629","630","631","632","633","634","635","636","637"],"import React, { useContext, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, ButtonGroup, LinearProgress, List, ListItem, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\n\r\nimport { UserManagerContext } from './UserManagerStore';\r\nimport TableButton from '../../app/common/form/TableButton';\r\nimport MaterialTable from 'material-table';\r\n\r\n \r\nconst UserList: React.FC = () => {\r\n\r\n     const UserManagerStore = useContext(UserManagerContext);  \r\n     \r\n\r\n    useEffect(() => {       \r\n        UserManagerStore.getList();                  \r\n      }, [UserManagerStore, UserManagerStore.getList])  \r\n      \r\n    const TableColumns = [\r\n        {\r\n          title: \"Display Name\",\r\n          field: \"DisplayName\",                 \r\n          render :  (values: any) => { return <NavLink to={\"/useredit/\" + values.Username } >{values.DisplayName}</NavLink> } \r\n        },\r\n        {\r\n          title: \"Username\",\r\n          field: \"Username\",\r\n                  \r\n        },\r\n        {\r\n          title: \"Email\",\r\n          field: \"Email\",\r\n                  \r\n        },\r\n        {\r\n          title: \"PhoneNumber\",\r\n          field: \"PhoneNumber\",\r\n                  \r\n        },\r\n        {\r\n          title: \"Is Active\",\r\n          field: \"IsActive\",   \r\n          render : (values: any) => { return values.IsActive ? \"Active\" : \"Inactive\" },\r\n          lookup: { true : \"Active\", false : \"Inactive\" },            \r\n        }\r\n    ];\r\n\r\n    const TableActions = [\r\n        {          \r\n          icon: (values: any) => { return <TableButton path=\"useredit/\" label=\"Add New\"  /> },\r\n          tooltip: 'Add User',\r\n          isFreeAction: true,\r\n          onClick: (event:any) =>{},   \r\n          iconProps: { style: { fontSize: \"34px\", color: \"green\", borderRadius:\"0%  !important\" , backgroundColor:'rosybrown' } },            \r\n        },\r\n        {          \r\n            icon: (values: any) => { return <TableButton label=\"Refresh\"  /> },\r\n            tooltip: 'Add User',\r\n            isFreeAction: true,\r\n            onClick: (event:any) =>{ UserManagerStore.getList();},   \r\n            iconProps: { style: { fontSize: \"34px\", color: \"green\", borderRadius:\"0%  !important\" , backgroundColor:'rosybrown' } },            \r\n          }\r\n      ];      \r\n\r\n    if( UserManagerStore.loading ){\r\n      return <LinearProgress color=\"secondary\"  className=\"loaderStyle\" />     \r\n    }\r\n\r\n    return (\r\n\r\n      <div className={\"tabcontainers1\"}>\r\n\r\n        <link rel=\"stylesheet\" href=\"styles.css\" ></link>\r\n\r\n        <div className={\"tabcontainers2\"} >        \r\n            <MaterialTable                       \r\n                title=\"User List\"\r\n                data={UserManagerStore.itemList}\r\n                columns={TableColumns}\r\n                options={{ search: true, paging: true, filtering: true, pageSize:10,  tableLayout: \"auto\"\r\n                    // , exportButton: false ,  actionsColumnIndex: -1, toolbarButtonAlignment:\"left\",                            \r\n                }}   \r\n                actions={TableActions}         \r\n            />\r\n        </div>\r\n      </div>\r\n     \r\n      // <List>  \r\n      //   <ListItem divider>\r\n      //     <h3>User List</h3>  \r\n      //   </ListItem>\r\n          \r\n          \r\n      //   <ListItem divider>\r\n      //   <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n      //     <Button >\r\n      //       <NavLink to=\"/useredit/\" >Add New</NavLink> \r\n      //     </Button>\r\n      //     <Button onClick={ () => { UserManagerStore.getList(); }}>Refresh</Button>          \r\n      //   </ButtonGroup>\r\n      //   </ListItem>\r\n\r\n        \r\n        \r\n      //   <ListItem divider>\r\n      //     <TableContainer component={Paper}>\r\n      //       <Table aria-label=\"simple table\">\r\n      //         <TableHead>\r\n      //           <TableRow>                  \r\n      //             <TableCell align=\"left\">DisplayName</TableCell>\r\n      //             <TableCell align=\"left\">Username</TableCell>\r\n      //             <TableCell align=\"left\">Email</TableCell>\r\n      //             <TableCell align=\"left\">PhoneNumber</TableCell>\r\n      //             <TableCell align=\"left\">Is Active</TableCell>\r\n      //           </TableRow>\r\n      //         </TableHead>\r\n      //         <TableBody>\r\n      //           {UserManagerStore.itemList.map((row) => (\r\n      //             <TableRow key={row.Username} >\r\n      //               <TableCell component=\"th\" scope=\"row\"  >\r\n      //                 <NavLink to={\"/useredit/\" + row.Username } >{row.DisplayName}</NavLink> \r\n      //               </TableCell>\r\n      //               <TableCell align=\"left\">{row.Username}</TableCell>                                               \r\n      //               <TableCell align=\"left\">{row.Email}</TableCell>  \r\n      //               <TableCell align=\"left\">{row.PhoneNumber}</TableCell>\r\n      //               <TableCell align=\"left\" >{row.IsActive ? \"Acrive\" : \"Inactive\" }</TableCell>            \r\n      //             </TableRow>\r\n      //           ))}\r\n      //         </TableBody>\r\n      //       </Table>\r\n      //     </TableContainer>\r\n      //   </ListItem>\r\n\r\n      // </List>        \r\n     \r\n    );\r\n};\r\n\r\n\r\nexport default observer(UserList);\r\n","C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\UserManagerStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\UserManager.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\UserEdit.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRole\\AppUserRoleList.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRole\\AppUserRoleEdit.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRole\\AppUserRoleStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRole\\AppUserRole.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\AppTableMasterList.tsx",["638","639"],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\AppTableMasterEdit.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\AppTableMasterStore.ts",["640"],"\nimport { createContext } from \"react\";\nimport { observable, action, runInAction, makeObservable } from \"mobx\";\nimport agent from \"../../app/api/agent\";\nimport { AppTableMaster, IAppTableMaster } from \"./AppTableMaster\";\n\nconst IAppTableMasterAPI = \"/AppTableMaster\";\n\nconst DBFun = {\n  list: (): Promise<IAppTableMaster[]> => agent.requests.get(IAppTableMasterAPI),\n  details: (Id: number) => agent.requests.get(`${IAppTableMasterAPI}/${Id}`),\n  create: (item: IAppTableMaster) => agent.requests.post(IAppTableMasterAPI, item),\n  update: (item: IAppTableMaster) =>\n    agent.requests.put(`${IAppTableMasterAPI}/${item.Id}`, item),\n  delete: (Id: number) => agent.requests.del(`${IAppTableMasterAPI}/${Id}`),\n};\n\nexport default class AppTableMasterStoreImpl {\n\n  loading = false;\n  updating = false;\n  itemList: IAppTableMaster[] = [];\n  item: AppTableMaster = new AppTableMaster()\n\n  constructor() {\n    makeObservable(this, {\n         itemList: observable,\n         loading: observable,\n         updating: observable,\n         item: observable,\n         getList: action,\n         loadItem: action,\n         editItem: action\n    });\n  }\n\n  getList = async () => {        \n    this.loading = true;\n    try {               \n      this.itemList = await DBFun.list();       \n      this.loading = false;  \n      return this.itemList;                 \n    } catch (error) {\n      runInAction( () => {\n        this.loading = false;            \n        throw error;\n      });\n    }\n  }\n\n  loadItem = async (id: number) => {\n    this.loading = true;\n    try {\n      //this.itemList = await DBFun.list(); \n      this.item = await DBFun.details(id);       \n      this.loading = false;      \n      return this.item;   \n      } catch (error) {\n        console.log(error);\n        this.loading = false;\n      }\n  }\n\n editItem = async (item: IAppTableMaster) => {    \n    //this.loading = true;\n    try {        \n      let itm = new  AppTableMaster();\n      if (item.Id) {\n        itm = await DBFun.update(item);\n      } else {\n        itm = await DBFun.create(item);\n      }\n      //this.loading = false;         \n      return itm;   \n    } catch (error) {\n      runInAction( () => {\n        //this.loading = false;        \n      });        \n      throw error;\n    }\n  };\n\n  deleteItem = async (id: number) => {\n    this.updating = true;\n    this.loading = true;\n    try {\n      var res = await DBFun.delete(id);    \n      this.updating = false;   \n      this.loading = false;\n      return res;\n      return res;\n    } catch (error) {    \n      this.updating = false;  \n      this.loading = false;             \n      console.log(error);\n      return error;\n    }\n  };  \n}\n\nexport const AppTableMasterContext = createContext(new AppTableMasterStoreImpl());\n\n","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\AppTableMaster.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppColumnMaster\\AppColumnMasterList.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppColumnMaster\\AppColumnMasterEdit.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppColumnMaster\\AppColumnMasterStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppColumnMaster\\AppColumnMaster.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRoleMaster\\AppUserRoleMasterList.tsx",["641","642","643","644","645","646","647","648","649","650","651","652"],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRoleMaster\\AppUserRoleMasterEdit.tsx",["653","654","655","656","657","658","659","660"],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRoleMaster\\AppUserRoleMasterStore.ts",["661"],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserRoleMaster\\AppUserRoleMaster.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserAccess\\AppUserAccessList.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserAccess\\AppUserAccessEdit.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserAccess\\AppUserAccessStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppUserAccess\\AppUserAccess.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppColumnMaster\\AppColumn.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\SystemConstants.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppData\\AppDataEdit.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppData\\AppDataList.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppData\\AppData.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppData\\AppDataStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppStatusList\\AppStatusListList.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppStatusList\\AppStatusListEdit.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppStatusList\\AppStatusList.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppStatusList\\AppStatusListStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppHistory\\AppHistoryList.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppHistory\\AppHistoryEdit.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppHistory\\AppHistoryStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppHistory\\AppHistory.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfigType\\AppConfigTypeList.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfigType\\AppConfigTypeEdit.tsx",["662","663"],"import { Button, ButtonGroup, Container, LinearProgress, Link, List, ListItem, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\nimport MyCustomTxt from '../../app/common/form/MyCustomTxt';\nimport { AppConfigType } from './AppConfigType';\nimport { AppConfigTypeContext } from './AppConfigTypeStore';\nimport { observer } from 'mobx-react-lite';\nimport { AppConfigContext } from '../AppConfig/AppConfigStore';\n\ninterface DetailParms {\n  id: string;\n}\nconst AppConfigTypeEdit: React.FC = () => {\n\n  const { id } = useParams<DetailParms>();\n  const AppConfigTypeStore = useContext(AppConfigTypeContext);\n  const AppConfigStore = useContext(AppConfigContext);  \n \n  let history = useHistory();\n  const [item, setItem] = useState(new AppConfigType());\n  const [loading, setLoading] = useState(true);\n  \n  useEffect(() => {\n\n    AppConfigTypeStore.loadItem(Number(id));\n    if (id) {\n      AppConfigStore.getConfigList(Number(id)); \n      AppConfigTypeStore.loadItem(Number(id)).then((val) => {\n        setItem(val as any);     \n        setLoading(false);   \n      });\n    } else {\n      setItem(new AppConfigType()); \n      setLoading(false);     \n    }\n    \n  }, [id, AppConfigTypeStore, AppConfigTypeStore.loadItem, AppConfigStore]);\n\n  const onItemSubmit = (values: any) => {    \n    setLoading(true);\n    AppConfigTypeStore.editItem(values).then((val) => {\n\t  history.push('/AppConfigTypelist');\n      //debugger;\n      //setItem(new AppConfigType(val));\n      //setLoading(false);\n    });\n  };\n\n  const openModel = (col: AppConfigType) => {  \n    // if(!col.TableID){\n    //   col.TableID = item.Id;\n    // }\n    // setSelectedColumn(col);\n    // setOpen(true);\n  };\n\n  if(loading){\n    return <LinearProgress color=\"secondary\"  className=\"loaderStyle\" /> \n  }\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">  \n\n      <Formik\n          initialValues={item}\n          validationSchema={Yup.object({\n            Title: Yup.string().required('Title required'),                     \n          })}\n          onSubmit={onItemSubmit}\n        >\n          <Form > \n            {item.Id}\n            <MyCustomTxt   \n                name=\"Title\"                         \n                type=\"text\"                \n                autoFocus={true}\n                required={true}                                \n                label=\"Title\"                                                                     \n              />\n                           \n              <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"                  \n                >\n                  Save\n                </Button> \n                { item.Id && \n                  <Button\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"                    \n                    onClick={ () => {\n                      AppConfigTypeStore.deleteItem(item.Id).then( () => {\n                        history.push('/AppConfigTypelist');\n                      })\n                    }}\n                  >\n                    Delete\n                  </Button>\n                }\n                <Button onClick={ () => { history.push('/AppConfigTypelist');  }}>Back</Button>          \n              </ButtonGroup>\n\n          </Form>\n        </Formik>\n\n\n        <List>\n          <ListItem divider>\n            <h5>Config List</h5>  \n          </ListItem>\n          \n           \n          <ListItem divider>\n            <TableContainer component={Paper}>\n              <Table aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Order</TableCell>\n                    <TableCell align=\"left\">Title</TableCell>\n                    {/* <TableCell align=\"left\">Type</TableCell>\n                    <TableCell align=\"left\">User Access</TableCell>\n                    <TableCell align=\"left\">Delete</TableCell> */}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  { AppConfigStore.AppConfigList.map((row) => (\n                    <TableRow key={row.Id} >\n                      {/* <TableCell component=\"th\" scope=\"row\"  >\n                        <NavLink to={\"/AppColumnMasterItemEdit/\" + row.Id } >{row.Id}</NavLink> \n                      </TableCell> */}\n                      <TableCell align=\"left\" width=\"50\">{row.Order}</TableCell>                          \n                      <TableCell align=\"left\"  >\n                        {/* <Link href=\"#\" onClick={ () => { openModel( row as any ) } } >{row.Title}</Link> */}\n                        <NavLink to={`/AppConfigItemEdit/${item.Id}/${row.Id}` } >{row.Title}</NavLink>\n                      </TableCell>  \n                      {/* <TableCell align=\"left\"> { ColumnDataType.find( u => u.Id == row.Type )?.value }</TableCell>  \n                      <TableCell align=\"left\">{row.UserAccess}</TableCell>  \n                      <TableCell align=\"left\" >\n                        <DeleteOutlinedIcon onClick={ () => { AppColumnMasterStore.deleteItem(row.Id).then( () => {   AppColumnMasterStore.getColumnList(id); } )}}  />\n                      </TableCell>             */}\n                    </TableRow>\n                  ))}\n\n                  <TableRow key=\"AddNew\"  >   \n                    <TableCell colSpan={2}>\n                      <NavLink to={`/AppConfigItemEdit/${item.Id}/` } >Add New {item.Title}</NavLink>\n                      {/* <Button color=\"primary\" onClick={ () => { openModel( new AppConfigType() ) }}>Add New {item.Title}</Button>    */}\n                    </TableCell>                                                                                  \n                    \n                  </TableRow>\n\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </ListItem>                    \n      </List>\n\n    </Container>\n  );\n};\n\nexport default observer(AppConfigTypeEdit);\n\n","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfigType\\AppConfigTypeStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfigType\\AppConfigType.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfig\\AppConfigList.tsx",["664","665"],"import React, { useContext, useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { AppConfigContext } from './AppConfigStore';\nimport { Button, ButtonGroup, LinearProgress, List, ListItem } from '@material-ui/core';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport { AppConfigTypeContext } from '../AppConfigType/AppConfigTypeStore';\nimport { IAppConfig } from './AppConfig';\nimport MaterialTable from 'material-table';\nimport { IAppConfigType } from '../AppConfigType/AppConfigType';\n \nconst AppConfigList: React.FC = () => {\n\n  const AppConfigTypeStore = useContext(AppConfigTypeContext);\n  const AppConfigStore = useContext(AppConfigContext);  \n  const [types, setTypes] = useState<string[]>([]); \n\n  const TableColumns = [\n    {\n      title: \"Order\",\n      field: \"Order\",          \n      defaultSort: \"asc\",\n      filtering: false,\n    },\n    {\n      title: \"Title\",\n      field: \"Title\",\n      render : (values: IAppConfig) => { return <NavLink to={`/AppConfigItemEdit/${values.ConfigTypeId}/${values.Id}` } >{values.Title}</NavLink> },\n    },\n    {\n      title: \"Type\",\n      field: \"ConfigTypeId\", \n      render : (values: IAppConfig) => { return AppConfigTypeStore.itemList.find( u => u.Id === values.ConfigTypeId )?.Title },\n      lookup: types, \n    },\n    {\n      title: \"Id\",\n      field: \"Id\", \n      render : (values: IAppConfig) => { return <DeleteOutlinedIcon onClick={ () => { AppConfigStore.deleteItem(values.Id).then( () => {   AppConfigStore.getList(); })}}  /> },      \n      filtering: false,\n    },\n  ];\n\n   \n  \n    useEffect(() => {       \n      \n      AppConfigTypeStore.getList().then( (res : any) => {\n        \n        res.map( (row:IAppConfigType) => {\n          types[ row.Id ] =  row.Title;                  \n        });        \n        setTypes(types);\n      });\n\n      AppConfigStore.getList();                        \n    }, [AppConfigStore, AppConfigStore.getList, AppConfigTypeStore.getList])       \n\n    if(AppConfigStore.loading){\n      return <LinearProgress color=\"secondary\"  className=\"loaderStyle\" />     \n    }\n\n    return (\n      <List>\n        <ListItem divider>\n        <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n          <Button >\n            <NavLink to=\"/AppConfigItemEdit/\" >Add New</NavLink> \n          </Button>\n          <Button onClick={ () => { AppConfigStore.getList(); }}>Refresh</Button>          \n        </ButtonGroup>\n        </ListItem>\n        \n        <ListItem divider>\n          <div className={\"tabcontainers1\"}>\n            <div className={\"tabcontainers2\"} >     \n              {TableColumns.length>0     &&   \n              <MaterialTable                    \n                title=\"Application Configration\"\n                data={AppConfigStore.itemList}\n                columns={TableColumns as any}\n                options={{ sorting:true, search: true, paging: true, filtering: true, exportButton: true, pageSize:100,  tableLayout: \"auto\"}}            \n              />\n            }\n            </div>\n          </div>\n        </ListItem>\n      </List>             \n    );\n};\n\nexport default observer(AppConfigList);\n","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfig\\AppConfigStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfig\\AppConfig.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppConfig\\AppConfigEdit.tsx",["666","667","668"],"import { Button, ButtonGroup, Chip, Container, LinearProgress, TextField } from '@material-ui/core';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport MyCustomTxt from '../../app/common/form/MyCustomTxt';\nimport { AppConfig } from './AppConfig';\nimport { AppConfigContext } from './AppConfigStore';\nimport { observer } from 'mobx-react-lite';\nimport { Autocomplete } from '@material-ui/lab';\nimport { AppConfigTypeContext } from '../AppConfigType/AppConfigTypeStore';\n\n\ninterface DetailParms {\n  typeid: string;\n  id: string; \n}\nconst AppConfigEdit: React.FC = () => {\n\n  const { id, typeid } = useParams<DetailParms>();\n  const AppConfigTypeStore = useContext(AppConfigTypeContext);\n  const AppConfigStore = useContext(AppConfigContext);\n \n \n  let history = useHistory();\n  const [item, setItem] = useState(new AppConfig());\n  const [type, setType] = useState(Number(typeid));\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  \n  useEffect(() => {\n    \n\n    AppConfigTypeStore.getList(); \n    AppConfigStore.loadItem(Number(id));\n    if (id) {\n      AppConfigStore.loadItem(Number(id)).then((val) => {\n        setItem(val as any); \n        var ty = val!.ConfigTypeId;\n        setType(ty);    \n        setLoading(false);   \n      });\n    } else {\n      setItem(new AppConfig()); \n      setType(Number(typeid));\n      setLoading(false);     \n    }\n    \n  }, [id, AppConfigStore, AppConfigStore.loadItem, AppConfigTypeStore]);\n\n  const onItemSubmit = (values: any) => {    \n    setLoading(true);\n    values.Type = type;\n    \n    AppConfigStore.editItem(values).then((val) => {\n      debugger;\n      if((val as any).errors){\n        setError((val as any).errors.Error);  \n        setLoading(false);              \n        return;\n      }\n      else{\n        history.push(`/AppConfigTypeItemEdit/${typeid}`);\n      }\n\t    \n    });\n  }; \n\n  if(loading){\n    return <LinearProgress color=\"secondary\"  className=\"loaderStyle\" /> \n  }\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">  \n       {error && <div  style={{ color:'red' , fontWeight:'bold', padding:5 , border: '1px solid green', margin:10 }} >{error}</div>}\n\n      <Formik\n          initialValues={item}\n          validationSchema={Yup.object({\n            Title: Yup.string().required('Title required'),                     \n          })}\n          onSubmit={onItemSubmit}\n        >\n          <Form > \n           \n            {type && \n              <Chip label={ `Type : ${AppConfigTypeStore.itemList.find( u => u.Id === type )?.Title }` }  color=\"primary\"  />\n            }\n\n            {/* { !type && \n            <Autocomplete                             \n              value={ AppConfigTypeStore.itemList.find( u => u.Id === type ) } \n              id=\"Type\"\n              options={AppConfigTypeStore.itemList}\n              getOptionLabel={(option) => option.Title }                \n              style={{ width: 300, paddingTop: 20  }}\n              renderInput={(params) => <TextField {...params} label=\"Type\" variant=\"outlined\" />}\n\n              onChange={(event:any, newValue:any) => {\n                if(newValue){\n                  setType(newValue.Id);\n                }                \n              }}\n            /> } */}\n\n            <MyCustomTxt   \n              name=\"Title\"                         \n              type=\"text\"                \n              autoFocus={true}\n              required={true}                                \n              label=\"Title\"                                                                     \n            />\n            \n            \n\n            <MyCustomTxt   \n              name=\"Order\"                         \n              type=\"number\"                               \n              label=\"Order\"                                                                     \n            />\n\n            <MyCustomTxt   \n              name=\"Det1\"                         \n              type=\"text\"                               \n              label=\"Det1\"                                                                     \n            />\n              <MyCustomTxt   \n              name=\"Det2\"                         \n              type=\"text\"                                \n              label=\"Det2\"                                                                     \n            />\n\n            <MyCustomTxt   \n              name=\"Det3\"                         \n              type=\"text\"                               \n              label=\"Det3\"                                                                     \n            />\n            <MyCustomTxt   \n              name=\"Det4\"                         \n              type=\"text\"                                                \n              label=\"Det4\"                                                                     \n            />\n            <MyCustomTxt   \n              name=\"Det5\"                         \n              type=\"text\"                                             \n              label=\"Det5\"                                                                     \n            />            \n              <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"                  \n                >\n                  Save\n                </Button> \n                { item.Id && \n                  <Button\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"                    \n                    onClick={ () => {\n                      AppConfigStore.deleteItem(item.Id).then( () => {\n                        history.push(`/AppConfigTypeItemEdit/${typeid}`);\n                      })\n                    }}\n                  >\n                    Delete\n                  </Button>\n                }\n                <Button onClick={ () => { history.push(`/AppConfigTypeItemEdit/${typeid}`);  }}>Back</Button>          \n              </ButtonGroup>\n\n          </Form>\n        </Formik>\n\n         \n\n    </Container>\n  );\n};\n\nexport default observer(AppConfigEdit);\n\n","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAction\\AppActionEdit.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAction\\AppActionList.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAction\\AppAction.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAction\\AppActionStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppFlow\\AppFlowEdit.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppFlow\\AppFlowList.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppFlow\\AppFlowStore.ts",["669"],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppFlow\\AppFlow.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppApi\\AppApiList.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppApi\\AppApiEdit.tsx",["670","671","672","673"],"import { Button, ButtonGroup, Container, LinearProgress, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField,  } from '@material-ui/core';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport moment from 'moment';\n\nimport MyCustomTxt from '../../app/common/form/MyCustomTxt';\nimport { AppApiAction, AttachmentDetails, Customer, Attachment } from './AppApi';\nimport { AppStatusListContext } from '../AppStatusList/AppStatusListStore';\nimport { AppApiContext } from './AppApiStore';\n \ninterface DetailParms {\n  id: string;\n}\nconst AppApiEdit: React.FC = () => { \n\n  const FlowId = 1;\n  const { id } = useParams<DetailParms>();\n  const AppStatusListStore = useContext(AppStatusListContext);\n  const AppApiStore = useContext(AppApiContext);\n \n  let history = useHistory();\n  const [error, setError] = useState('');\n  const [actionId, setActionId] = useState(0);\n  const [item, setItem] = useState(new Customer());\n  const [loading, setLoading] = useState(true);\n  const [attachFileList, setFileList] =useState<Attachment[]>([]);\n  const [ActionComment, SetActionComment] = useState(\"\");\n  \n   \n  useEffect(() => {\n    //debugger;     \n    AppStatusListStore.getStatusList(1);\n\n\n    var IdVal =0;\n    if (id) { IdVal=Number(id); }\n    AppApiStore.getActions(FlowId,IdVal).then( (res) => { \n      //debugger;\n        if((res as any).errors){          \n          setError( error + \", \" + (res as any).errors.Error);         \n          return;\n        }\n    });\n\n    if(id){\n      setLoading(true);\n\n\n\n      \n      let act: AppApiAction = new AppApiAction()\n      act.ActionId = 10;  \n      act.ItemId = Number(id);\n      act.Parm1 = id;\n      //act.ReturnFlow = id ? 'update' : 'create';\n\n      let formData = new FormData();\n      formData.append('ActionId', '10' );\n      formData.append('ItemId',  id );\n      formData.append('Parm1',  id );\n\n      AppApiStore.ExecuteAction(formData).then( (res) => {      \n        //debugger;\n        if((res as any).errors){          \n          setError((res as any).errors.Error);         \n          return;\n        }\n        else{                 \n          setItem(res.Result1[0] as any);\n\n          res.Result1[0].InitAttachment?.forEach( x => {\n            attachFileList.push( new Attachment( {file:  new Blob(), Details : x as any } ))\n          });\n          \n          setFileList(attachFileList);\n        }  \n        setLoading(false);\n      });\n    }\n    else{\n      setItem(new Customer()); \n      setLoading(false);\n    }\n  }, [id, AppApiStore.ExecuteAction , AppApiStore.getActions, AppApiStore, AppStatusListStore, attachFileList]);\n\n\n  const onItemSubmit = (values: any) => {    \n    \n    \n    // let colMap = new Map([\n    //   [\"Id\", \"Id\"], \n    //   [\"CustomerName\", \"Txt1\"], \n    //   [\"CIF\", \"Num1\"]\n    // ]);  \n\n    // interface LooseObject {\n    //   [key: string]: any\n    // }\n    // var dataParm: LooseObject = {};    \n    // Object.keys(values).forEach(function(key,index) {          \n    //   if( colMap.get(key) && values[key] ){        \n    //     dataParm[ colMap.get(key) as string ] =  values[key] ;\n    //   }      \n    // });\n\n    debugger;\n    let act: AppApiAction = new AppApiAction()\n    act.ActionId = actionId;\n\n    values.InitAttachment = [];\n\n    let formData = new FormData();\n    attachFileList.forEach( f => {\n      values.InitAttachment.push(f.Details);\n      formData.append('FileList', f.file, f.Details.FileName);\n    });\n   \n    // if(files){\n    //   for(var i=0;i<files.length;i++){\n\n    //     //var f =  file[i] as any;        \n    //     formData.append('FileList', files[i]);\n        \n    //     //values.InitAttachment.push(new Attachment( { Action : 'Create', FileArrayId: i, Id : -1, FileName :  f.name,  Prop1 : 'Desc 1'  }) );\n    //   }      \n    // }\n    // values.InitAttachment = fileDetails;\n\n    formData.append('ActionId', actionId.toString() )\n    formData.append('Parm1', JSON.stringify(values) );\n    formData.append('ItemId',  values.Id );\n\n    formData.append('Parm2',  ActionComment );\n\n    act.Parm1 = JSON.stringify(values );\n    act.ItemId = values.Id; \n//return;\n\n    AppApiStore.ExecuteAction(formData).then( (res) => {      \n      //debugger;\n\n      if((res as any).errors){\n        setError((res as any).errors.Error);\n        setLoading(false);\n        return;\n      }\n      else{\n        history.push('/AppApilist');\n      }\n    });\n  };\n\n  \n  const prop1Change = (e:any, i:number) => { \n    let files = [...attachFileList];\n    files[i].Details.Prop1 = e.target.value;\n    setFileList(files);\n\n  }\n\n  const onFileChange = (event:any) => { \n    //debugger;\n    \n    for(var i=0;i<event.target.files.length;i++){\n\n      var f =  event.target.files[i] as any;    \n      var filename = attachFileList.length.toString() + \"-\" + f.name;\n      var attch = new Attachment( { \n          file : f, \n          Details : new  AttachmentDetails({  Action : 'Create', FileArrayId: i, Id : -1, FileName : filename,  Prop1 : 'Desc 1'  }) \n        });\n      \n      setFileList(currentArray => [...currentArray, attch]);\n      event.target.value = null;                        \n    }\n    //setFileList(attachFileList);\n\n  }\n\n  const download = (id:number, fileName:string) => { \n    let act: AppApiAction = new AppApiAction()\n    act.ActionId = 15;  \n    act.ItemId = Number(id);\n    act.Parm1 = id.toString();\n\n    AppApiStore.FileDownload(act).then( (fileSteam) => { \n      debugger;\n      const downloadUrl = window.URL.createObjectURL(new Blob([fileSteam]));\n      const link = document.createElement('a');\n      link.href = downloadUrl;\n      link.setAttribute('download', fileName); //any other extension\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n\n      debugger;\n    });\n   \n  }\n\n\n  if(loading){\n    return <LinearProgress color=\"secondary\"  className=\"loaderStyle\" /> \n  }\n  \n  return (\n    \n    <Container component=\"main\" maxWidth=\"lg\">        \n      {error && <div  style={{ color:'red' , fontWeight:'bold', padding:5 , border: '1px solid green', margin:10 }} >{error}</div>}     \n    \n      {/* <a href=\"#\" onClick={ () => { download(65, \"\")} } >Test download</a>  */}\n\n      <Formik\n          initialValues={item}\n\n          validationSchema={Yup.object({\n            CustomerName: Yup.string().required('Title required'),                     \n          })}\n          onSubmit={onItemSubmit}\n        >\n          <Form > \n            Status : { AppStatusListStore.itemList.find( s => s.Id === item.StatusId )?.Title }\n            <MyCustomTxt   \n              name=\"CustomerName\"                         \n              type=\"text\"                \n              autoFocus={true}\n              required={true}                                \n              label=\"CustomerName\"                                                                     \n            />\n              \n            <MyCustomTxt   \n              name=\"CIF\"                         \n              type=\"number\"                \n              required={true}                                \n              label=\"CIF\"                                                                     \n            />\n            {item.StatusId === 4 && \n            <MyCustomTxt   \n              name=\"ApprovalComment\"                         \n              type=\"text\"                \n              required={item.StatusId === 4 ? true : false}                                \n              label=\"Approval Comment\"                                                                     \n            />\n            }\n            {item.StatusId !== 4 && \n              <div>Approval Comment : {item.ApprovalComment} </div>\n            }\n\n            ActionComment: {ActionComment}\n            \n             <TextField \n              id=\"ActionComment\"\n              value={ActionComment} \n              placeholder=\"ActionComment\"            \n              type=\"text\"                                     \n              variant=\"outlined\"\n              margin=\"normal\"                                        \n              fullWidth   \n              label=\"Action Comment\"  \n              multiline={false}\n              onChange={ (event) => { \n                debugger;\n                SetActionComment(event.target.value);\n              } }  \n             />\n\n            \n\n  <TableContainer component={Paper}>\n    <Table aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>       \n          <TableCell align=\"left\">File Name</TableCell>\n          <TableCell align=\"left\">Comment</TableCell>     \n          <TableCell align=\"left\"></TableCell>   \n        </TableRow>      \n      </TableHead>\n      <TableBody>\n      { attachFileList && attachFileList.map( (rr, index) => (\n          <TableRow>       \n            <TableCell align=\"left\"> <a  onClick={ () => { download(rr.Details.Id,  rr.Details.FileName)} } >{rr.Details.FileName}</a> </TableCell>\n            <TableCell align=\"left\">\n              <input type=\"text\" value={rr.Details.Prop1}  onChange={ (e) => { prop1Change(e,index) } } /> \n            </TableCell>     \n            <TableCell align=\"left\"><a href=\"#\">Delete</a></TableCell>      \n          </TableRow>\n          ))\n      } \n      <TableRow>             \n        <TableCell align=\"left\" colSpan={3}><input type=\"file\" multiple={false} onChange={onFileChange} /></TableCell>  \n      </TableRow>      \n      </TableBody>\n    </Table>\n  </TableContainer>\n\n        <TableContainer component={Paper}>\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>   \n              <TableCell align=\"left\">Date Time</TableCell>     \n                <TableCell align=\"left\">Action By</TableCell>\n                <TableCell align=\"left\">Action</TableCell>\n                <TableCell align=\"left\">From Status</TableCell>     \n                <TableCell align=\"left\">To Status</TableCell> \n                <TableCell align=\"left\">Comment</TableCell>\n              </TableRow>      \n            </TableHead>\n            <TableBody>\n            { item.AppHistory.map( (hist, index) => (\n                <TableRow> \n                  <TableCell align=\"left\"> {  moment(hist.DateTime).format(\"DD-MMM-YYYY\")  }</TableCell>\n                  <TableCell align=\"left\">{hist.ActionBy}</TableCell>\n                  <TableCell align=\"left\">{hist.Action}</TableCell>\n                  <TableCell align=\"left\">{ AppStatusListStore.AppStatusList.find( s => s.Id === hist.FromStage )?.Title } {hist.FromStage}</TableCell>     \n                  <TableCell align=\"left\">{ AppStatusListStore.AppStatusList.find( s => s.Id === hist.ToStage )?.Title } {hist.ToStage}</TableCell> \n                  <TableCell align=\"left\">{hist.Comment}</TableCell>      \n                </TableRow>\n                ))\n            }      \n            </TableBody>\n          </Table>\n        </TableContainer>\n\n  \n\n\n\n            {/* <table >\n              <tr>\n                <td>File Name</td>\n                <td>Prop1</td>\n                <td></td>\n              </tr>\n              { attachFileList \n              &&  attachFileList.map( (rr, index) => ( \n              \n              <tr key={index}>\n                <td>\n                  <a href=\"#\" onClick={ () => { download(rr.Details.Id,  rr.Details.FileName)} } >{rr.Details.FileName}</a> \n                </td>\n                <td>\n                  <input type=\"text\" value={rr.Details.Prop1}  onChange={ (e) => { \n                    debugger;  \n                    prop1Change(e,index)\n                    } } />                  \n                </td>\n                <td> <a href=\"#\">Delete</a></td>\n              </tr>\n\n            ) ) }\n            \n            <tr>\n              <td colSpan={3}>\n                <input type=\"file\" multiple={false} onChange={onFileChange} />\n              </td>\n            </tr>\n\n            </table> */}\n\n            {/* <input type=\"file\" multiple={true} onChange={onFileChange} />\n\n            <input type=\"file\" multiple={true} onChange={onFileChange} /> */}\n                           \n              <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n\n                { AppApiStore.actionList.map( (row) => (\n                  \n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    key={row.Id}\n                    onClick={ () => { setActionId( row.Id); }}\n                  >\n                    {row.Action}\n                  </Button> \n                ))}\n                \n                {/* { item.Id && \n                  <Button\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"                    \n                    onClick={ () => {\n\n                      let act: AppApiAction = new AppApiAction()\n                      act.ActionId = 11;\n                      act.Parm1 = item.Id.toString();\n                      AppApiStore.ExecuteAction(act).then( (res) => {      \n                        history.push('/AppApilist');    \n                      });                      \n                    }}\n                  >\n                    Delete\n                  </Button> \n                } */}\n                <Button onClick={ () => { history.push('/AppApilist');  }}>Back</Button>          \n              </ButtonGroup>\n\n          </Form>\n        </Formik>\n\n        \n       \n    </Container>\n  );\n};\n\nexport default observer(AppApiEdit);\n\n","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppApi\\AppApi.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppApi\\AppApiStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\form\\MyDropDown.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\form\\MyCheckBox.tsx",["674","675","676","677","678","679"],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAttachment\\AppAttachmentList.tsx",["680"],"import React, { useContext, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { AppAttachmentContext } from './AppAttachmentStore';\nimport { Button, ButtonGroup, LinearProgress, List, ListItem, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nconst AppAttachmentList: React.FC = () => {\n\n  const AppAttachmentStore = useContext(AppAttachmentContext);     \n  \n  \n\n  const download = (id: number, fileName : string) => { \n    \n    AppAttachmentStore.download(id,fileName);        \n  };\n\n    useEffect(() => {       \n      AppAttachmentStore.getList();                  \n    }, [AppAttachmentStore, AppAttachmentStore.getList])       \n\n    if(AppAttachmentStore.loading){\n      return <LinearProgress color=\"secondary\"  className=\"loaderStyle\" />     \n    }\n\n    return (\n      <List>\n        <ListItem divider>\n        <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n          <Button >\n            <NavLink to=\"/AppAttachmentItemEdit/\" >Add New</NavLink> \n          </Button>\n          <Button onClick={ () => { AppAttachmentStore.getList(); }}>Refresh</Button>          \n        </ButtonGroup>\n        </ListItem>\n        \n        <ListItem divider>\n          <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>ID</TableCell>\n                  <TableCell align=\"right\">FileName</TableCell>\n                  <TableCell align=\"right\">Delete</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {AppAttachmentStore.itemList.map((row) => (\n                  <TableRow key={row.Id} >\n                    <TableCell component=\"th\" scope=\"row\"  >\n                      <NavLink to={\"/AppAttachmentItemEdit/\" + row.Id } >{row.Id}</NavLink> \n                    </TableCell>\n                                             \n                    <TableCell align=\"right\" >\n                      <a onClick={ () => { download(row.Id, row.FileName)} } >{row.FileName}</a> \n                    </TableCell>  \n                    <TableCell align=\"right\" >\n                      <DeleteOutlinedIcon onClick={ () => { AppAttachmentStore.deleteItem(row.Id).then( () => {   AppAttachmentStore.getList(); })}}  />\n                    </TableCell>            \n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </ListItem>\n\n      </List>        \n     \n    );\n};\n\nexport default observer(AppAttachmentList);\n","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAttachment\\AppAttachmentEdit.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAttachment\\AppAttachmentStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppAttachment\\AppAttachment.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\nav\\listItems.tsx",["681"],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNavigation\\AppNavigationList.tsx",["682"],"import React, { useContext, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { AppNavigationContext } from './AppNavigationStore';\nimport { Button, ButtonGroup, LinearProgress, List, ListItem } from '@material-ui/core';\n\nimport MaterialTable from 'material-table';\nimport { IAppNavigation } from './AppNavigation';\nimport { AppUserRoleMasterContext } from '../AppUserRoleMaster/AppUserRoleMasterStore';\n \nconst AppNavigationList: React.FC = () => {\n\n  const AppNavigationStore = useContext(AppNavigationContext);  \n  const AppUserRoleMasterStore = useContext(AppUserRoleMasterContext);     \n  \n    useEffect(() => {       \n      AppUserRoleMasterStore.getList();  \n      AppNavigationStore.setSelected('/AppNavigationlist');\n      AppNavigationStore.getList();                  \n    }, [AppUserRoleMasterStore, AppUserRoleMasterStore.getList, AppNavigationStore, AppNavigationStore.getList, AppNavigationStore.setSelected])       \n\n    if(AppNavigationStore.loading){\n      return <LinearProgress color=\"secondary\"  className=\"loaderStyle\" />     \n    }\n \n    const TableColumns = [\n      {\n        title: \"Id\",\n        field: \"Id\",\n      },\n      {\n        title: \"Title\",\n        field: \"Title\",\n        render : (values: IAppNavigation) => { return <NavLink to={\"/AppNavigationItemEdit/\" + values.Id } >{values.Title}</NavLink> }\n        //lookup: { \"Resubmit\": 'Resubmit', \"Approve\": 'Approve', \"New Request\" : \"New Request\", \"Reject\" : \"Reject\"},\n      },\n      {\n        title: \"Path\",\n        field: \"Path\",\n        //render : rend\n        //render : (values: IAppHistory) => { return AppStatusListStore.itemList.find( u => u.Id ==values.FromStage )?.Title }\n      },     \n      {\n        title: \"Icon\",\n        field: \"Icon\",\n        //render : rend\n        //render : (values: IAppHistory) => { return AppStatusListStore.itemList.find( u => u.Id ==values.FromStage )?.Title }\n      }, \n      {\n        title: \"RoleId\",\n        field: \"RoleId\",   \n        render : (values: any) => { return AppUserRoleMasterStore.itemList.find( u => u.Id == values.RoleId )?.Name }\n      },\n    ];\n\n\n    return (\n      <List>\n        <ListItem divider>\n        <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\n          <Button >\n            <NavLink to=\"/AppNavigationItemEdit/\" >Add New</NavLink> \n          </Button>\n          <Button onClick={ () => { AppNavigationStore.getList(); }}>Refresh</Button>          \n        </ButtonGroup>\n        </ListItem>\n        \n        <div className={\"tabcontainers1\"}>\n          <div className={\"tabcontainers2\"} >        \n            <MaterialTable                       \n              title=\"Left Navigation List\"\n              data={AppNavigationStore.itemList}\n              columns={TableColumns}\n              options={{ search: true, paging: true, filtering: true, exportButton: true, pageSize:100 }}            \n            />\n          </div>\n        </div>   \n\n      </List>        \n     \n    );\n};\n\nexport default observer(AppNavigationList);\n","C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNavigation\\AppNavigationEdit.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNavigation\\AppNavigationStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNavigation\\AppNavigation.ts",["683"],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\nav\\AppLeftNavBar.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotificationsMaster\\AppNotificationsMasterEdit.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotificationsMaster\\AppNotificationsMasterList.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotificationsMaster\\AppNotificationsMaster.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotificationsMaster\\AppNotificationsMasterStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNitificationTemplate\\AppNitificationTemplateList.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNitificationTemplate\\AppNitificationTemplateEdit.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNitificationTemplate\\AppNitificationTemplateStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNitificationTemplate\\AppNitificationTemplate.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AdminPage\\AdminPage.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\nav\\Notifications.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\nav\\CurrentUser.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotifications\\AppNotificationsList.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotifications\\AppNotificationsStore.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotifications\\AppNotifications.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppNotifications\\AppNotificationsEdit.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\user\\UserProfile.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\common\\ErrorPage.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\Theme.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\Employee\\EmployeeList.tsx",["684","685","686","687","688","689","690","691","692","693","694","695","696","697"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, ButtonGroup, LinearProgress, List, ListItem, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { AppApiContext } from '../AppApi/AppApiStore';\r\nimport { AppApiAction } from '../AppApi/AppApi';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { IEmployee } from './Employee';\r\nimport MaterialTable from 'material-table';\r\nimport { green } from '@material-ui/core/colors';\r\nimport TableButton from '../../app/common/form/TableButton';\r\n\r\nconst EmployeeList: React.FC = () => {\r\n    \r\n    const AppApiStore = useContext(AppApiContext);\r\n    const [loading, setLoading] = useState(true);\r\n    const QueryActionId = 19;\r\n      \r\n    useEffect(() => {    \r\n        //debugger        \r\n        setLoading(true);        \r\n        let act: AppApiAction = new AppApiAction()\r\n        act.ActionId = QueryActionId;      \r\n        AppApiStore.GetData(act).then( (res) => {                 \r\n            setLoading(false);              \r\n        });  \r\n      }, [AppApiStore.ExecuteAction, AppApiStore] ) \r\n\r\n\r\n    const TableColumns = [\r\n        {\r\n          title: \"Id\",\r\n          field: \"Id\",       \r\n          width: \"10%\"\r\n        },\r\n        {\r\n          title: \"FirstName\",\r\n          field: \"FirstName\",\r\n          render :  (values: any) => { return <NavLink to={\"/EmployeeEdit/\" + values.Id } >{values.FirstName}</NavLink> }\r\n          //render : (values: IAppAction) => { return <NavLink to={\"/AppNavigationItemEdit/\" + values.Id } >{values.Title}</NavLink> }\r\n          //lookup: { \"Resubmit\": 'Resubmit', \"Approve\": 'Approve', \"New Request\" : \"New Request\", \"Reject\" : \"Reject\"},\r\n        },\r\n    ];\r\n\r\n    const TableActions = [\r\n        {          \r\n          icon: (values: any) => { return <TableButton path=\"EmployeeEdit/\" label=\"Add New\"  /> },\r\n          tooltip: 'Add User',\r\n          isFreeAction: true,\r\n          onClick: (event:any) =>{},   \r\n          iconProps: { style: { fontSize: \"34px\", color: \"green\", borderRadius:\"0%  !important\" , backgroundColor:'rosybrown' } },            \r\n        },\r\n        {          \r\n            icon: (values: any) => { return <TableButton label=\"Refresh\"  /> },\r\n            tooltip: 'Add User',\r\n            isFreeAction: true,\r\n            onClick: (event:any) =>{AppApiStore.GetDataByActionId(QueryActionId);},   \r\n            iconProps: { style: { fontSize: \"34px\", color: \"green\", borderRadius:\"0%  !important\" , backgroundColor:'rosybrown' } },            \r\n          }\r\n      ];\r\n  \r\n\r\n    if(AppApiStore.loading){\r\n        return <LinearProgress color=\"secondary\"  className=\"loaderStyle\" />     \r\n    }\r\n\r\n      return (\r\n        <div className={\"tabcontainers1\"}>\r\n            {/* <head>\r\n                <link rel=\"stylesheet\" href=\"styles.css\" ></link>\r\n            </head> */}\r\n            <link rel=\"stylesheet\" href=\"styles.css\" ></link>\r\n\r\n            <div className={\"tabcontainers2\"} >        \r\n                <MaterialTable                       \r\n                    title=\"List\"\r\n                    data={AppApiStore.dateResult.Result1}\r\n                    columns={TableColumns}\r\n                    options={{ search: true, paging: true, filtering: true, pageSize:10,  tableLayout: \"auto\"\r\n                        // , exportButton: false ,  actionsColumnIndex: -1, toolbarButtonAlignment:\"left\",                            \r\n                    }}   \r\n                    actions={TableActions}         \r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(EmployeeList);","C:\\Shaiju\\wayooz\\client-app\\src\\features\\Employee\\EmployeeEdit.tsx",["698","699","700","701","702","703","704","705","706","707","708"],"\r\nimport { Button, ButtonGroup, Container, LinearProgress, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField,  } from '@material-ui/core';\r\nimport { Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport moment from 'moment';\r\nimport MyCustomTxt from '../../app/common/form/MyCustomTxt';\r\nimport AppStatusListStore from '../AppStatusList/AppStatusListStore';\r\nimport { Employee } from './Employee';\r\nimport { AppApiContext } from '../AppApi/AppApiStore';\r\nimport { AppApiAction } from '../AppApi/AppApi';\r\n\r\ninterface DetailParms {\r\n    id: string;\r\n}\r\n\r\nconst EmployeeEdit: React.FC = () => {\r\n\r\n    const FlowId = 5;\r\n    const { id } = useParams<DetailParms>();\r\n\r\n    const AppApiStore = useContext(AppApiContext);\r\n    \r\n    let history = useHistory();\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [item, setItem] = useState(new Employee());\r\n    const [actionId, setActionId] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setLoading(true); \r\n        debugger;\r\n        var IdVal =0;\r\n        if (id) {             \r\n            IdVal=Number(id); \r\n\r\n            let act: AppApiAction = new AppApiAction()\r\n            act.ActionId = 21;   \r\n            act.ItemId = IdVal;\r\n            act.Parm1 = id.toString();\r\n            AppApiStore.GetData(act).then( (res) => {  \r\n                setItem(res.Result1[0] as any);               \r\n                setLoading(false);              \r\n            }); \r\n\r\n            // let act: AppApiAction = new AppApiAction()\r\n            // act.ActionId = 10;  \r\n            // act.ItemId = Number(id);\r\n            // act.Parm1 = id;\r\n\r\n            // let formData = new FormData();\r\n            // formData.append('ActionId', '10' );\r\n            // formData.append('ItemId',  id );\r\n            // formData.append('Parm1',  id );\r\n\r\n        }\r\n        else{\r\n            setItem(new Employee()); \r\n            setLoading(false);\r\n        }\r\n            \r\n        AppApiStore.getActions(FlowId,IdVal).then( (res) => { \r\n            //debugger;\r\n            if((res as any).errors){          \r\n                setError( error + \", \" + (res as any).errors.Error);         \r\n                return;\r\n            }\r\n        });\r\n\r\n\r\n      \r\n    },[id, AppApiStore.ExecuteAction , AppApiStore.getActions]);\r\n\r\n    const onItemSubmit = (values: any) => { \r\n\r\n        let act: AppApiAction = new AppApiAction()\r\n        act.ActionId = actionId;\r\n        let formData = new FormData();\r\n        formData.append('ActionId', actionId.toString() )\r\n        formData.append('Parm1', JSON.stringify(values) );\r\n        formData.append('ItemId',  values.Id );\r\n\r\n        AppApiStore.ExecuteAction(formData).then( (res) => {      \r\n            //debugger;      \r\n            if((res as any).errors){\r\n              setError((res as any).errors.Error);\r\n              setLoading(false);\r\n              return;\r\n            }\r\n            else{\r\n              history.push('/Employeelist');\r\n            }\r\n          });\r\n    }\r\n\r\n    if(loading){\r\n        return <LinearProgress color=\"secondary\"  className=\"loaderStyle\" /> \r\n    }\r\n\r\n    return(\r\n    \r\n        <Container component=\"main\" maxWidth=\"lg\">  \r\n          {error && <div  style={{ color:'red' , fontWeight:'bold', padding:5 , border: '1px solid green', margin:10 }} >{error}</div>}     \r\n          \r\n          <Formik\r\n            initialValues={item}\r\n\r\n            validationSchema={Yup.object({\r\n             FirstName: Yup.string().required('First Name required'),                     \r\n             })}\r\n          onSubmit={onItemSubmit}\r\n        >\r\n           \r\n            <Form >\r\n                {/* Status : { AppStatusListStore.itemList.find( s => s.Id === item.StatusId )?.Title } */}\r\n                FirstName:  {item.FirstName}\r\n                <MyCustomTxt   \r\n                    name=\"FirstName\"                                            \r\n                    type=\"text\"                \r\n                    autoFocus={true}\r\n                    required={true}                                \r\n                    label=\"FirstName\"                                                                     \r\n                />\r\n\r\n                <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n                    { AppApiStore.actionList.map( (row) => (                \r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        key={row.Id}\r\n                        onClick={ () => { setActionId( row.Id); }}\r\n                    >\r\n                        {row.Action}\r\n                    </Button> \r\n                    ))}\r\n                    <Button onClick={ () => { history.push('/Employeelist');  }}>Back</Button>          \r\n                </ButtonGroup>\r\n            </Form>\r\n        \r\n        </Formik>\r\n    \r\n        </Container> \r\n    )    \r\n  }\r\n\r\n\r\n  export default observer(EmployeeEdit);","C:\\Shaiju\\wayooz\\client-app\\src\\features\\Employee\\Employee.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\form\\TableButton.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\TableDetails.tsx",["709"],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\TableColumns.tsx",["710","711","712","713","714","715","716","717","718","719"],"C:\\Shaiju\\wayooz\\client-app\\src\\app\\common\\common\\MessageDialog.tsx",[],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\TableStatusList.tsx",["720","721","722","723","724","725"],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\TableFlowList.tsx",["726","727","728","729","730"],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\TableActions.tsx",["731","732"],"C:\\Shaiju\\wayooz\\client-app\\src\\features\\AppTableMaster\\TableActionItemEdit.tsx",["733"],"C:\\Shaiju\\wayooz\\client-app\\src\\Portal\\Navigation\\NavigationEdit.tsx",["734","735"],"C:\\Shaiju\\wayooz\\client-app\\src\\Portal\\Navigation\\Navigation.ts",[],"C:\\Shaiju\\wayooz\\client-app\\src\\Portal\\Api\\Api.ts",["736","737","738","739","740","741","742"],"import { createContext } from \"react\";\r\nimport { observable, action, runInAction, makeObservable } from \"mobx\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { AnySrvRecord } from \"dns\";\r\n\r\n//==============================================\r\n\r\nexport interface IAppApi {\r\n\tId: number\r\n\tCustomerName: string\r\n\tCIF: number\r\n}\r\n\r\nexport class AppApi implements IAppApi {\r\n\tId: number = 0;\r\n\tCustomerName: string = '';\r\n\tCIF: number = 0;\r\n  \r\n  constructor(init?: IAppApi) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport interface IApiAction {\r\n\tActionId : number \r\n\tItemId : number\r\n\tReturnFlow : string \r\n\tParm1 : string \r\n\tParm2 : string \r\n\tParm3 : string \r\n\tParm4 : string \r\n\tParm5 : string \r\n\tParm6 : string \r\n\tParm7 : string \r\n\tParm8 : string \r\n\tParm9 : string \r\n\tParm10 : string \t\r\n\t\r\n}\r\n \r\nexport class AppApiAction implements IApiAction {\r\n\tActionId : number = 0;\r\n\tItemId : number = 0;\r\n\tReturnFlow : string = '';\r\n\tParm1 : string = '';\r\n\tParm2 : string = '';\r\n\tParm3 : string = '';\r\n\tParm4 : string = '';\r\n\tParm5 : string = '';\r\n\tParm6 : string = '';\r\n\tParm7 : string = '';\r\n\tParm8 : string = '';\r\n\tParm9 : string = '';\r\n\tParm10  : string = '';\r\n\t\r\n\r\n  \r\n  constructor(init?: IApiAction) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport interface IApiResult  {\r\n\tId: number\r\n\tResult1: any[]\r\n}\r\n\r\nexport class DataResult implements IApiResult {\r\n\tId: number = 0;\r\n\tResult1: any[] = [];\r\n  \r\n  constructor(init?: IApiResult ) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport interface IApiResult  {\r\n\tId: number\r\n\tResult1: any[]\r\n}\r\n\r\nexport class ApiResult implements IApiResult {\r\n\tId: number = 0;\r\n\tResult1: any[] = [];\r\n  \r\n  constructor(init?: IApiResult ) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\n\r\nexport interface IAppStatusList {\r\n\tId: number\r\n\tTitle: string\r\n\tOrder: number\r\n\tTableId: number\r\n}\r\n\r\nexport interface IAppStatusList {\r\n\tId: number\r\n\tTitle: string\r\n\tOrder: number\r\n\tTableId: number\r\n}\r\n\r\nexport class AppStatusList implements IAppStatusList {\r\n\tId: number = 0;\r\n\tTitle: string = '';\r\n\tOrder: number = 0;\r\n\tTableId: number = 0;\r\n  \r\n  constructor(init?: IAppStatusList) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport interface IAppUserRoleMaster {\r\n\tId: string\r\n\tName: string\r\n}\r\n\r\nexport class AppUserRoleMaster implements IAppUserRoleMaster {\r\n\tId: string = '';\r\n\tName: string = '';\r\n  \r\n  constructor(init?: IAppUserRoleMaster) {\r\n    Object.assign(this, init);\r\n  }\r\n  \r\n}\r\n\r\n\r\n\r\n//==============================================\r\n\r\nconst IAppApiAPI = \"/AppApi\";\r\n\r\nconst DBFun = { \r\n  Execute: (action: FormData) => agent.requests.postForm(`${IAppApiAPI}/TakeAction`, action),  \r\n  ExecuteQuery: (action: IApiAction) => agent.requests.post(`${IAppApiAPI}/Query`, action),    \r\n  FileDownload: (action: IApiAction) => agent.requests.downloadPost(`${IAppApiAPI}/Attachment`, action),\r\n  ActionList: (FlowId: number, Id: number) =>  agent.requests.get(`${IAppApiAPI}/ActionList/${FlowId}?ItemId=${Id}`),\r\n  StatusList: (TableId: number)  =>  agent.requests.get(`${IAppApiAPI}/GetStatusList/${TableId}`),\r\n  ConfigList: (type: number)  =>  agent.requests.get(`${IAppApiAPI}/GetConfigList/${type}`),\r\n  UserList: ()  =>  agent.requests.get(`${IAppApiAPI}/GetUserList`),\r\n  RoleList: ()  =>  agent.requests.get(`${IAppApiAPI}/GetRoleList`),\r\n  \r\n\r\n  list: (): Promise<any[]> => agent.requests.get(IAppApiAPI),\r\n  details: (Id: number) => agent.requests.get(`${IAppApiAPI}/${Id}`),\r\n  create: (item: any) => agent.requests.post(IAppApiAPI, item),\r\n  update: (item: any) => agent.requests.put(`${IAppApiAPI}/${item.Id}`, item),\r\n  delete: (Id: number) => agent.requests.del(`${IAppApiAPI}/${Id}`),\r\n};\r\n\r\n\texport default class ApiImpl {\t\r\n\r\n\trolesFromArray(rolesList: AppUserRoleMaster[], strRoleArray: string) : AppUserRoleMaster[] {\r\n\r\n\t\tlet roles : AppUserRoleMaster[] = [];\r\n\t\tif(strRoleArray && rolesList && rolesList.length > 0){\r\n\t\t\tstrRoleArray.split(',').forEach( r => {\r\n\t\t\t\tlet role = new AppUserRoleMaster();\r\n\t\t\t\trole.Id = r;\r\n\t\t\t\tvar RoleName = rolesList.find(x => x.Id == r)?.Name;\r\n\t\t\t\trole.Name = RoleName ? RoleName : '' ;\r\n\t\t\t\troles.push(role);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn roles;\t\t\t\r\n\t}\r\n\r\n\trolesName(rolesList: AppUserRoleMaster[], strRoleArray:string){\r\n\r\n\t}\r\n\r\n\t\r\n\r\n\r\n\r\n\tgetStatusList = async (id: number) => {\t\t\r\n\t\ttry {      \t\t \r\n\t\t\treturn await DBFun.StatusList(id); \t\t  \r\n\t\t} catch (error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t}\r\n\r\n\tgetUserList = async () => {\t\t\r\n\t\ttry {      \t\t \r\n\t\t\treturn await DBFun.UserList(); \t\t  \r\n\t\t} catch (error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t}\r\n\r\n\tgetRoleList = async () => {\t\t\r\n\t\ttry {      \t\t \r\n\t\t\treturn await DBFun.RoleList(); \t\t  \r\n\t\t} catch (error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t}\r\n\r\n\tgetConfigList = async (id: number) => {\t\t\r\n\t\ttry {      \t\t \r\n\t\t\treturn await DBFun.ConfigList(id); \t\t  \r\n\t\t} catch (error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t}\r\n\t\r\n\tgetActions = async (flowId: number, id: number) => {\t\t\r\n\t\ttry {      \t\t \r\n\t\t\treturn await DBFun.ActionList(flowId, id); \t\t  \r\n\t\t} catch (error) {\r\n\t\t\treturn error;\r\n\t\t\t}\r\n\t}\r\n\r\n\tExecuteQuery = async (action: IApiAction) => {\t\t\r\n\t\ttry {        \t\r\n\t\t  let itm = new ApiResult();\r\n\t\t  return await DBFun.ExecuteQuery(action);  \t\t   \r\n\t\t} catch (error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t}\r\n\r\n\tExecuteAction = async (action: FormData) => {    \t\t\r\n\t\ttry {        \t\t  \r\n\t\t\treturn await DBFun.Execute(action);  \t\t\r\n\t\t} catch (error) {\r\n\t\t\treturn error\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const ApiContext = createContext(new ApiImpl());\r\n\r\n","C:\\Shaiju\\wayooz\\client-app\\src\\Portal\\Navigation\\NavigationList.tsx",[],{"ruleId":"743","severity":1,"message":"744","line":35,"column":6,"nodeType":"745","endLine":35,"endColumn":43,"suggestions":"746"},{"ruleId":"747","severity":1,"message":"748","line":65,"column":30,"nodeType":"749","messageId":"750","endLine":65,"endColumn":32},{"ruleId":"751","severity":1,"message":"752","line":6,"column":8,"nodeType":"753","messageId":"754","endLine":6,"endColumn":16},{"ruleId":null,"fatal":true,"severity":2,"message":"755","line":125,"column":14},{"ruleId":"751","severity":1,"message":"756","line":10,"column":8,"nodeType":"753","messageId":"754","endLine":10,"endColumn":23},{"ruleId":"751","severity":1,"message":"757","line":12,"column":8,"nodeType":"753","messageId":"754","endLine":12,"endColumn":19},{"ruleId":"751","severity":1,"message":"758","line":13,"column":8,"nodeType":"753","messageId":"754","endLine":13,"endColumn":18},{"ruleId":"751","severity":1,"message":"759","line":14,"column":8,"nodeType":"753","messageId":"754","endLine":14,"endColumn":14},{"ruleId":"751","severity":1,"message":"760","line":16,"column":8,"nodeType":"753","messageId":"754","endLine":16,"endColumn":24},{"ruleId":"751","severity":1,"message":"761","line":1,"column":20,"nodeType":"753","messageId":"754","endLine":1,"endColumn":27},{"ruleId":"751","severity":1,"message":"762","line":3,"column":29,"nodeType":"753","messageId":"754","endLine":3,"endColumn":38},{"ruleId":"751","severity":1,"message":"763","line":19,"column":11,"nodeType":"753","messageId":"754","endLine":19,"endColumn":20},{"ruleId":"747","severity":1,"message":"764","line":33,"column":27,"nodeType":"749","messageId":"750","endLine":33,"endColumn":29},{"ruleId":"751","severity":1,"message":"765","line":1,"column":28,"nodeType":"753","messageId":"754","endLine":1,"endColumn":34},{"ruleId":"747","severity":1,"message":"748","line":18,"column":46,"nodeType":"749","messageId":"750","endLine":18,"endColumn":48},{"ruleId":"743","severity":1,"message":"766","line":24,"column":6,"nodeType":"745","endLine":24,"endColumn":25,"suggestions":"767"},{"ruleId":"768","replacedBy":"769"},{"ruleId":"770","replacedBy":"771"},{"ruleId":"768","replacedBy":"772"},{"ruleId":"770","replacedBy":"773"},{"ruleId":"751","severity":1,"message":"774","line":19,"column":12,"nodeType":"753","messageId":"754","endLine":19,"endColumn":21},{"ruleId":"751","severity":1,"message":"775","line":4,"column":10,"nodeType":"753","messageId":"754","endLine":4,"endColumn":16},{"ruleId":"751","severity":1,"message":"776","line":4,"column":18,"nodeType":"753","messageId":"754","endLine":4,"endColumn":29},{"ruleId":"751","severity":1,"message":"777","line":4,"column":47,"nodeType":"753","messageId":"754","endLine":4,"endColumn":51},{"ruleId":"751","severity":1,"message":"778","line":4,"column":53,"nodeType":"753","messageId":"754","endLine":4,"endColumn":61},{"ruleId":"751","severity":1,"message":"779","line":4,"column":63,"nodeType":"753","messageId":"754","endLine":4,"endColumn":68},{"ruleId":"751","severity":1,"message":"780","line":4,"column":70,"nodeType":"753","messageId":"754","endLine":4,"endColumn":75},{"ruleId":"751","severity":1,"message":"781","line":4,"column":77,"nodeType":"753","messageId":"754","endLine":4,"endColumn":86},{"ruleId":"751","severity":1,"message":"782","line":4,"column":88,"nodeType":"753","messageId":"754","endLine":4,"endColumn":97},{"ruleId":"751","severity":1,"message":"783","line":4,"column":99,"nodeType":"753","messageId":"754","endLine":4,"endColumn":113},{"ruleId":"751","severity":1,"message":"784","line":4,"column":115,"nodeType":"753","messageId":"754","endLine":4,"endColumn":124},{"ruleId":"751","severity":1,"message":"785","line":4,"column":126,"nodeType":"753","messageId":"754","endLine":4,"endColumn":134},{"ruleId":"751","severity":1,"message":"786","line":5,"column":8,"nodeType":"753","messageId":"754","endLine":5,"endColumn":19},{"ruleId":"751","severity":1,"message":"787","line":16,"column":11,"nodeType":"753","messageId":"754","endLine":16,"endColumn":26},{"ruleId":"788","severity":1,"message":"789","line":91,"column":7,"nodeType":"790","messageId":"791","endLine":91,"endColumn":18},{"ruleId":"751","severity":1,"message":"775","line":5,"column":10,"nodeType":"753","messageId":"754","endLine":5,"endColumn":16},{"ruleId":"751","severity":1,"message":"776","line":5,"column":18,"nodeType":"753","messageId":"754","endLine":5,"endColumn":29},{"ruleId":"751","severity":1,"message":"777","line":5,"column":47,"nodeType":"753","messageId":"754","endLine":5,"endColumn":51},{"ruleId":"751","severity":1,"message":"778","line":5,"column":53,"nodeType":"753","messageId":"754","endLine":5,"endColumn":61},{"ruleId":"751","severity":1,"message":"779","line":5,"column":63,"nodeType":"753","messageId":"754","endLine":5,"endColumn":68},{"ruleId":"751","severity":1,"message":"780","line":5,"column":70,"nodeType":"753","messageId":"754","endLine":5,"endColumn":75},{"ruleId":"751","severity":1,"message":"781","line":5,"column":77,"nodeType":"753","messageId":"754","endLine":5,"endColumn":86},{"ruleId":"751","severity":1,"message":"782","line":5,"column":88,"nodeType":"753","messageId":"754","endLine":5,"endColumn":97},{"ruleId":"751","severity":1,"message":"783","line":5,"column":99,"nodeType":"753","messageId":"754","endLine":5,"endColumn":113},{"ruleId":"751","severity":1,"message":"784","line":5,"column":115,"nodeType":"753","messageId":"754","endLine":5,"endColumn":124},{"ruleId":"751","severity":1,"message":"785","line":5,"column":126,"nodeType":"753","messageId":"754","endLine":5,"endColumn":134},{"ruleId":"751","severity":1,"message":"792","line":6,"column":8,"nodeType":"753","messageId":"754","endLine":6,"endColumn":26},{"ruleId":"751","severity":1,"message":"776","line":1,"column":18,"nodeType":"753","messageId":"754","endLine":1,"endColumn":29},{"ruleId":"751","severity":1,"message":"793","line":1,"column":37,"nodeType":"753","messageId":"754","endLine":1,"endColumn":41},{"ruleId":"751","severity":1,"message":"794","line":1,"column":54,"nodeType":"753","messageId":"754","endLine":1,"endColumn":58},{"ruleId":"751","severity":1,"message":"786","line":14,"column":8,"nodeType":"753","messageId":"754","endLine":14,"endColumn":19},{"ruleId":"751","severity":1,"message":"795","line":17,"column":10,"nodeType":"753","messageId":"754","endLine":17,"endColumn":23},{"ruleId":"751","severity":1,"message":"796","line":18,"column":8,"nodeType":"753","messageId":"754","endLine":18,"endColumn":9},{"ruleId":"751","severity":1,"message":"797","line":27,"column":9,"nodeType":"753","messageId":"754","endLine":27,"endColumn":25},{"ruleId":"751","severity":1,"message":"798","line":35,"column":20,"nodeType":"753","messageId":"754","endLine":35,"endColumn":31},{"ruleId":"788","severity":1,"message":"789","line":130,"column":7,"nodeType":"790","messageId":"791","endLine":130,"endColumn":24},{"ruleId":"751","severity":1,"message":"799","line":1,"column":58,"nodeType":"753","messageId":"754","endLine":1,"endColumn":62},{"ruleId":"751","severity":1,"message":"800","line":51,"column":9,"nodeType":"753","messageId":"754","endLine":51,"endColumn":18},{"ruleId":"801","severity":1,"message":"802","line":50,"column":39,"nodeType":"803","messageId":"804","endLine":50,"endColumn":41},{"ruleId":"743","severity":1,"message":"805","line":57,"column":8,"nodeType":"745","endLine":57,"endColumn":76,"suggestions":"806"},{"ruleId":"751","severity":1,"message":"807","line":1,"column":64,"nodeType":"753","messageId":"754","endLine":1,"endColumn":73},{"ruleId":"751","severity":1,"message":"808","line":10,"column":10,"nodeType":"753","messageId":"754","endLine":10,"endColumn":22},{"ruleId":"743","severity":1,"message":"809","line":49,"column":6,"nodeType":"745","endLine":49,"endColumn":71,"suggestions":"810"},{"ruleId":"788","severity":1,"message":"789","line":72,"column":7,"nodeType":"811","messageId":"791","endLine":73,"endColumn":24},{"ruleId":"743","severity":1,"message":"812","line":87,"column":6,"nodeType":"745","endLine":87,"endColumn":111,"suggestions":"813"},{"ruleId":"814","severity":1,"message":"815","line":176,"column":19,"nodeType":"803","messageId":"816","endLine":176,"endColumn":59},{"ruleId":"817","severity":1,"message":"818","line":284,"column":38,"nodeType":"819","endLine":284,"endColumn":110},{"ruleId":"817","severity":1,"message":"820","line":288,"column":37,"nodeType":"819","endLine":288,"endColumn":49},{"ruleId":"751","severity":1,"message":"821","line":5,"column":3,"nodeType":"753","messageId":"754","endLine":5,"endColumn":8},{"ruleId":"751","severity":1,"message":"807","line":11,"column":5,"nodeType":"753","messageId":"754","endLine":11,"endColumn":14},{"ruleId":"751","severity":1,"message":"822","line":19,"column":17,"nodeType":"753","messageId":"754","endLine":19,"endColumn":25},{"ruleId":"751","severity":1,"message":"823","line":20,"column":17,"nodeType":"753","messageId":"754","endLine":20,"endColumn":25},{"ruleId":"824","severity":1,"message":"825","line":64,"column":1,"nodeType":"826","messageId":"827","endLine":67,"endColumn":7},{"ruleId":"824","severity":1,"message":"825","line":69,"column":1,"nodeType":"826","messageId":"827","endLine":72,"endColumn":19},{"ruleId":"817","severity":1,"message":"818","line":55,"column":23,"nodeType":"819","endLine":55,"endColumn":79},{"ruleId":"751","severity":1,"message":"828","line":6,"column":8,"nodeType":"753","messageId":"754","endLine":6,"endColumn":21},{"ruleId":"747","severity":1,"message":"748","line":52,"column":92,"nodeType":"749","messageId":"750","endLine":52,"endColumn":94},{"ruleId":"751","severity":1,"message":"829","line":1,"column":10,"nodeType":"753","messageId":"754","endLine":1,"endColumn":28},{"ruleId":"751","severity":1,"message":"775","line":2,"column":10,"nodeType":"753","messageId":"754","endLine":2,"endColumn":16},{"ruleId":"751","severity":1,"message":"776","line":2,"column":18,"nodeType":"753","messageId":"754","endLine":2,"endColumn":29},{"ruleId":"751","severity":1,"message":"777","line":2,"column":47,"nodeType":"753","messageId":"754","endLine":2,"endColumn":51},{"ruleId":"751","severity":1,"message":"778","line":2,"column":53,"nodeType":"753","messageId":"754","endLine":2,"endColumn":61},{"ruleId":"751","severity":1,"message":"779","line":2,"column":63,"nodeType":"753","messageId":"754","endLine":2,"endColumn":68},{"ruleId":"751","severity":1,"message":"780","line":2,"column":70,"nodeType":"753","messageId":"754","endLine":2,"endColumn":75},{"ruleId":"751","severity":1,"message":"781","line":2,"column":77,"nodeType":"753","messageId":"754","endLine":2,"endColumn":86},{"ruleId":"751","severity":1,"message":"782","line":2,"column":88,"nodeType":"753","messageId":"754","endLine":2,"endColumn":97},{"ruleId":"751","severity":1,"message":"783","line":2,"column":99,"nodeType":"753","messageId":"754","endLine":2,"endColumn":113},{"ruleId":"751","severity":1,"message":"784","line":2,"column":115,"nodeType":"753","messageId":"754","endLine":2,"endColumn":124},{"ruleId":"751","severity":1,"message":"785","line":2,"column":126,"nodeType":"753","messageId":"754","endLine":2,"endColumn":134},{"ruleId":"751","severity":1,"message":"830","line":7,"column":10,"nodeType":"753","messageId":"754","endLine":7,"endColumn":19},{"ruleId":"751","severity":1,"message":"831","line":9,"column":10,"nodeType":"753","messageId":"754","endLine":9,"endColumn":15},{"ruleId":"751","severity":1,"message":"832","line":15,"column":12,"nodeType":"753","messageId":"754","endLine":15,"endColumn":19},{"ruleId":"751","severity":1,"message":"779","line":2,"column":58,"nodeType":"753","messageId":"754","endLine":2,"endColumn":63},{"ruleId":"751","severity":1,"message":"780","line":2,"column":65,"nodeType":"753","messageId":"754","endLine":2,"endColumn":70},{"ruleId":"751","severity":1,"message":"781","line":2,"column":72,"nodeType":"753","messageId":"754","endLine":2,"endColumn":81},{"ruleId":"751","severity":1,"message":"782","line":2,"column":83,"nodeType":"753","messageId":"754","endLine":2,"endColumn":92},{"ruleId":"751","severity":1,"message":"783","line":2,"column":94,"nodeType":"753","messageId":"754","endLine":2,"endColumn":108},{"ruleId":"751","severity":1,"message":"784","line":2,"column":110,"nodeType":"753","messageId":"754","endLine":2,"endColumn":119},{"ruleId":"751","severity":1,"message":"785","line":2,"column":121,"nodeType":"753","messageId":"754","endLine":2,"endColumn":129},{"ruleId":"751","severity":1,"message":"807","line":2,"column":131,"nodeType":"753","messageId":"754","endLine":2,"endColumn":140},{"ruleId":"751","severity":1,"message":"833","line":8,"column":8,"nodeType":"753","messageId":"754","endLine":8,"endColumn":14},{"ruleId":"751","severity":1,"message":"834","line":10,"column":8,"nodeType":"753","messageId":"754","endLine":10,"endColumn":26},{"ruleId":"743","severity":1,"message":"835","line":74,"column":7,"nodeType":"745","endLine":74,"endColumn":63,"suggestions":"836"},{"ruleId":"751","severity":1,"message":"837","line":2,"column":40,"nodeType":"753","messageId":"754","endLine":2,"endColumn":48},{"ruleId":"751","severity":1,"message":"838","line":2,"column":10,"nodeType":"753","messageId":"754","endLine":2,"endColumn":14},{"ruleId":"751","severity":1,"message":"839","line":2,"column":16,"nodeType":"753","messageId":"754","endLine":2,"endColumn":22},{"ruleId":"751","severity":1,"message":"840","line":3,"column":13,"nodeType":"753","messageId":"754","endLine":3,"endColumn":16},{"ruleId":"751","severity":1,"message":"841","line":5,"column":10,"nodeType":"753","messageId":"754","endLine":5,"endColumn":20},{"ruleId":"751","severity":1,"message":"842","line":6,"column":8,"nodeType":"753","messageId":"754","endLine":6,"endColumn":19},{"ruleId":"751","severity":1,"message":"843","line":7,"column":10,"nodeType":"753","messageId":"754","endLine":7,"endColumn":24},{"ruleId":"751","severity":1,"message":"844","line":8,"column":10,"nodeType":"753","messageId":"754","endLine":8,"endColumn":31},{"ruleId":"751","severity":1,"message":"792","line":11,"column":8,"nodeType":"753","messageId":"754","endLine":11,"endColumn":26},{"ruleId":"743","severity":1,"message":"845","line":43,"column":8,"nodeType":"745","endLine":43,"endColumn":47,"suggestions":"846"},{"ruleId":"747","severity":1,"message":"748","line":122,"column":51,"nodeType":"749","messageId":"750","endLine":122,"endColumn":53},{"ruleId":"751","severity":1,"message":"799","line":1,"column":65,"nodeType":"753","messageId":"754","endLine":1,"endColumn":69},{"ruleId":"743","severity":1,"message":"847","line":37,"column":8,"nodeType":"745","endLine":37,"endColumn":45,"suggestions":"848"},{"ruleId":"751","severity":1,"message":"849","line":39,"column":11,"nodeType":"753","messageId":"754","endLine":39,"endColumn":22},{"ruleId":"751","severity":1,"message":"800","line":49,"column":11,"nodeType":"753","messageId":"754","endLine":49,"endColumn":20},{"ruleId":"751","severity":1,"message":"850","line":78,"column":23,"nodeType":"753","messageId":"754","endLine":78,"endColumn":24},{"ruleId":"747","severity":1,"message":"748","line":126,"column":51,"nodeType":"749","messageId":"750","endLine":126,"endColumn":53},{"ruleId":"751","severity":1,"message":"799","line":1,"column":65,"nodeType":"753","messageId":"754","endLine":1,"endColumn":69},{"ruleId":"743","severity":1,"message":"851","line":36,"column":8,"nodeType":"745","endLine":36,"endColumn":37,"suggestions":"852"},{"ruleId":"751","severity":1,"message":"800","line":43,"column":11,"nodeType":"753","messageId":"754","endLine":43,"endColumn":20},{"ruleId":"751","severity":1,"message":"850","line":72,"column":23,"nodeType":"753","messageId":"754","endLine":72,"endColumn":24},{"ruleId":"747","severity":1,"message":"748","line":111,"column":51,"nodeType":"749","messageId":"750","endLine":111,"endColumn":53},{"ruleId":"751","severity":1,"message":"853","line":20,"column":9,"nodeType":"753","messageId":"754","endLine":20,"endColumn":16},{"ruleId":"743","severity":1,"message":"854","line":31,"column":10,"nodeType":"745","endLine":31,"endColumn":101,"suggestions":"855"},{"ruleId":"743","severity":1,"message":"856","line":60,"column":10,"nodeType":"745","endLine":60,"endColumn":193,"suggestions":"857"},{"ruleId":"751","severity":1,"message":"858","line":10,"column":22,"nodeType":"753","messageId":"754","endLine":10,"endColumn":34},{"ruleId":"743","severity":1,"message":"859","line":82,"column":7,"nodeType":"745","endLine":82,"endColumn":127,"suggestions":"860"},{"ruleId":"751","severity":1,"message":"861","line":2,"column":10,"nodeType":"753","messageId":"754","endLine":2,"endColumn":20},{"ruleId":"751","severity":1,"message":"862","line":2,"column":22,"nodeType":"753","messageId":"754","endLine":2,"endColumn":28},{"ruleId":"751","severity":1,"message":"863","line":2,"column":30,"nodeType":"753","messageId":"754","endLine":2,"endColumn":41},{"ruleId":"751","severity":1,"message":"864","line":2,"column":43,"nodeType":"753","messageId":"754","endLine":2,"endColumn":57},{"ruleId":"751","severity":1,"message":"865","line":4,"column":10,"nodeType":"753","messageId":"754","endLine":4,"endColumn":22},{"ruleId":"747","severity":1,"message":"748","line":165,"column":45,"nodeType":"749","messageId":"750","endLine":165,"endColumn":47},{"ruleId":"751","severity":1,"message":"866","line":216,"column":9,"nodeType":"753","messageId":"754","endLine":216,"endColumn":12},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'PageTagStore'. Either include it or remove the dependency array.","ArrayExpression",["867"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'testComp' is defined but never used.","Identifier","unusedVar","Parsing error: Unexpected token. Did you mean `{'>'}` or `&gt;`?","'ContentEditable' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'PageCategoryItem' is defined but never used.","'PageTag' is defined but never used.","'useEffect' is defined but never used.","'errorText' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'CategoryId'. Either include it or remove the dependency array.",["868"],"no-native-reassign",["869"],"no-negated-in-lhs",["870"],["869"],["870"],"'txtMargin' is assigned a value but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Paper' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'TableButton' is defined but never used.","'handleClickOpen' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'DeleteOutlinedIcon' is defined but never used.","'Chip' is defined but never used.","'Grid' is defined but never used.","'AnyAaaaRecord' is defined but never used.","'_' is defined but never used.","'AppUserRoleStore' is assigned a value but never used.","'setUserRole' is assigned a value but never used.","'Link' is defined but never used.","'openModel' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'AppConfigTypeStore' and 'types'. Either include them or remove the dependency array. You can also do a functional update 'setTypes(t => ...)' if you only need 'types' in the 'setTypes' call.",["871"],"'TextField' is defined but never used.","'Autocomplete' is defined but never used.","React Hook useEffect has a missing dependency: 'typeid'. Either include it or remove the dependency array.",["872"],"ExpressionStatement","React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["873"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'attch'.","unsafeRefs","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Field' is defined but never used.","'setFiled' is assigned a value but never used.","'setValue' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'DashboardIcon' is defined but never used.","'IAppUserRoleMaster' is defined but never used.","'IEmployee' is defined but never used.","'green' is defined but never used.","'loading' is assigned a value but never used.","'moment' is defined but never used.","'AppStatusListStore' is defined but never used.","React Hook useEffect has missing dependencies: 'AppApiStore' and 'error'. Either include them or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["874"],"'useState' is defined but never used.","'Form' is defined but never used.","'Formik' is defined but never used.","'Yup' is defined but never used.","'useHistory' is defined but never used.","'MyCustomTxt' is defined but never used.","'AppTableMaster' is defined but never used.","'AppTableMasterContext' is defined but never used.","React Hook useEffect has a missing dependency: 'AppColumnMasterStore'. Either include it or remove the dependency array.",["875"],"React Hook useEffect has a missing dependency: 'AppStatusListStore'. Either include it or remove the dependency array.",["876"],"'dataRefresh' is assigned a value but never used.","'v' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AppFlowStore'. Either include it or remove the dependency array.",["877"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AppFlowStore' and 'AppStatusListStore'. Either include them or remove the dependency array.",["878"],"React Hook useEffect has missing dependencies: 'AppTableMasterStore', 'flowId', and 'tableId'. Either include them or remove the dependency array.",["879"],"'AppApiAction' is defined but never used.","React Hook useEffect has missing dependencies: 'error' and 'id'. Either include them or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["880"],"'observable' is defined but never used.","'action' is defined but never used.","'runInAction' is defined but never used.","'makeObservable' is defined but never used.","'AnySrvRecord' is defined but never used.","'itm' is assigned a value but never used.",{"desc":"881","fix":"882"},{"desc":"883","fix":"884"},"no-global-assign","no-unsafe-negation",{"desc":"885","fix":"886"},{"desc":"887","fix":"888"},{"desc":"889","fix":"890"},{"desc":"891","fix":"892"},{"desc":"893","fix":"894"},{"desc":"895","fix":"896"},{"desc":"897","fix":"898"},{"desc":"899","fix":"900"},{"desc":"901","fix":"902"},{"desc":"903","fix":"904"},"Update the dependencies array to be: [PageTagStore, userStore, userStore.getCurrentUser]",{"range":"905","text":"906"},"Update the dependencies array to be: [CategoryId, PageCategoryStore]",{"range":"907","text":"908"},"Update the dependencies array to be: [AppConfigStore, AppConfigStore.getList, AppConfigTypeStore, AppConfigTypeStore.getList, types]",{"range":"909","text":"910"},"Update the dependencies array to be: [id, AppConfigStore, AppConfigStore.loadItem, AppConfigTypeStore, typeid]",{"range":"911","text":"912"},"Update the dependencies array to be: [id, AppApiStore.ExecuteAction, AppApiStore.getActions, AppApiStore, AppStatusListStore, attachFileList, error]",{"range":"913","text":"914"},"Update the dependencies array to be: [id, AppApiStore.ExecuteAction, AppApiStore.getActions, AppApiStore, error]",{"range":"915","text":"916"},"Update the dependencies array to be: [id, AppColumnMasterStore.getColumnList, AppColumnMasterStore]",{"range":"917","text":"918"},"Update the dependencies array to be: [id, AppStatusListStore.getStatusList, AppStatusListStore]",{"range":"919","text":"920"},"Update the dependencies array to be: [id, AppFlowStore.getFlowList, AppFlowStore]",{"range":"921","text":"922"},"Update the dependencies array to be: [id, tableId, AppActionStore, AppActionStore.flowActions, AppStatusListStore.getStatusList, AppFlowStore, AppStatusListStore]",{"range":"923","text":"924"},"Update the dependencies array to be: [id, AppTableMasterStore.loadItem, AppFlowStore, AppActionStore, AppFlowStore.loadItem, AppActionStore.loadItem, AppStatusListStore, AppStatusListStore.getStatusList, AppTableMasterStore, tableId, flowId]",{"range":"925","text":"926"},"Update the dependencies array to be: [ApiStore, ApiStore.getActions, ApiStore.ExecuteAction, setRoles, setItem, ApiStore.rolesFromArray, id, error]",{"range":"927","text":"928"},[1466,1503],"[PageTagStore, userStore, userStore.getCurrentUser]",[824,843],"[CategoryId, PageCategoryStore]",[1963,2031],"[AppConfigStore, AppConfigStore.getList, AppConfigTypeStore, AppConfigTypeStore.getList, types]",[1545,1610],"[id, AppConfigStore, AppConfigStore.loadItem, AppConfigTypeStore, typeid]",[2690,2795],"[id, AppApiStore.ExecuteAction, AppApiStore.getActions, AppApiStore, AppStatusListStore, attachFileList, error]",[2468,2524],"[id, AppApiStore.ExecuteAction, AppApiStore.getActions, AppApiStore, error]",[1800,1839],"[id, AppColumnMasterStore.getColumnList, AppColumnMasterStore]",[1398,1435],"[id, AppStatusListStore.getStatusList, AppStatusListStore]",[1356,1385],"[id, AppFlowStore.getFlowList, AppFlowStore]",[1209,1300],"[id, tableId, AppActionStore, AppActionStore.flowActions, AppStatusListStore.getStatusList, AppFlowStore, AppStatusListStore]",[2469,2652],"[id, AppTableMasterStore.loadItem, AppFlowStore, AppActionStore, AppFlowStore.loadItem, AppActionStore.loadItem, AppStatusListStore, AppStatusListStore.getStatusList, AppTableMasterStore, tableId, flowId]",[2847,2967],"[ApiStore, ApiStore.getActions, ApiStore.ExecuteAction, setRoles, setItem, ApiStore.rolesFromArray, id, error]"]